
% functions, scripts, etc. only loaded in the world (walking around in maps)

{version=1.0}
{scope=world}

% these belong in global scope, but world-specific structs require them to be here for the recursive dump to work properly
asm : 8003E678, 019A78 : make_npcs 				: void : bool "determines whether they respawn after re-entering map?", int mapID, $NpcGroupList
api : 80044298, 01F698 : MakeNpcs         		: void : int, $NpcGroupList
api : 8004A47C, 02587C : DoBasicAI       			: void : $AISettings
api : 802C9ED8, 0EE888 : ResetFromLava			: void : $LavaResetList
% <-- end of entries from global scope


asm : 80281524, 7E23A4 : draw_shop_items		: void : void
api : 80281860, 7E26E0 : MakeShop				: void : $ShopItemPositions, $ShopInventory, $ShopPriceList, int	% last arg is flags for inventory items
api : 80281BD8, 7E2A58 : MakeShopOwner			: void : $ShopOwnerNPC
api : 80281CAC, 7E2B2C : MakeDoorAdvanced		: void : int, $Script {name=OpenDoor}, $Script {name=MoveWalls}, $Script {name=DropDoor}, $Script {name=ToggleVis}, colliderID, colliderID, modelID, $NpcList
% 802831DC	:	int, int 	% *FLOAT  ??? involves action state -- might have something to do with PushBlocks
api : 802831DC, 7E405C : CheckActionState "Checks whether current action state equals test state." : void : {out} var result {outType=bool}, #actionStateID "uses get_float_variable for some reason"
api : 802832E0, 7E4160 : CreatePushBlockGrid	: void : int blockSystemID, int sizeNx, int sizeNz, int centerX, int centerY, int centerZ, ptr cellData "numX * numZ bytes, use 0 for auto-allocation"
api : 8028347C, 7E42FC : SetPushBlock			: void : int blockSystemID, int gridX, int gridZ, int type "0 = no, 1 = block, 2 = obstruction"
api : 802835C0, 7E4440 : GetPushBlock			: void : int blockSystemID, int gridX, int gridZ, int* outType "0 = no, 1 = block, 2 = obstruction"
api : 802836B8, 7E4538 : GetGridIndexFromPos  	: void : int blockSystemID, int posX, int posY, int posZ, int* outGridX, int* outGridZ
api : 802837AC, 7E462C : SetPushBlockFallEffect	: void : int blockSystemID, $Function
% <-- end of file

api : 8028387C, 7E46FC : TeleportPartnerToPlayer : void : void
scr : 80285960, 7E67E0 : EnterWalk "Player walks toward an entrance" : void : Var[0] $Script callback "will be executed after the entry animation plays, use this to binds exits"

scr : 80285A60, 7E68E0 : EnterWalkShort "Similar to EnterWalk, but with a shorter move distance (40 vs 64 units)" : void : Var[0] $Script callback "will be executed after the entry animation plays, use this to binds exits"

scr : 80285CB0, 7E6B30 : EnterSavePoint : ??? : ??? % Spawns the player at saved coordinates (used when GetLoadType == 1).

scr : 80285CF4, 7E6B74 : ExitWalk "Player walks through an exit, using the heading set by UseExitHeading" : void : void

scr : 80285DAC, 7E6C2C : ExitSingleDoor	: ??? : Var[0] entryID exit, Var[1] colliderID doorCollider, Var[2] modelID doorModel, Var[3] #doorSwing swingDirection

scr : 80285DD4, 7E6C54 : EnterSingleDoor : ??? : Var[2] modelID doorModel, Var[3] #doorSwing swingDirection

scr : 80285E4C, 7E6CCC : ExitDoubleDoor : ??? : Var[0] entryID exit, Var[1] colliderID doorCollider, Var[2] modelID leftDoorModel, Var[3] modelID rightDoorModel

scr : 80285E74, 7E6CF4 : EnterDoubleDoor : ??? : Var[2] modelID leftDoorModel, Var[3] modelID rightDoorModel
