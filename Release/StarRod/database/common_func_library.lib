
% system/global functions, scripts, etc.
% excludes 'overlay memory': 80200000 - 802C3000

{version=1.0}
{scope=common}

/%
RAM: 80025C00 - 8009A5B0
ROM:     1000 -    759B0
%/
%{
asm : 80025C00, 001000 : entry_point				: void : void
asm : 80025F70, 001370 : boot_main					: void : void
asm : 8002605C, 00145C : gfxRetrace_Callback		: void : int gfxTaskNum
asm : 8002670C, 001B0C : gfxPreNMI_Callback			: void : void
asm : 80026740, 001B40 : step_game_loop				: void : void
asm : 80026B08, 001F08 : gfx_draw_frame				: void : void
asm : 80026DDC, 0021DC : load_engine_data			: void : void
asm : 80028874, 003C74 : update_input				: void : void
asm : 80028EE0, 0042E0 : poll_rumble				: void : void 	% sets nuContRmbModeSet"0,2=NU_CONT_RMB_MODE_AUTORUN"
asm : 80028F08, 004308 : start_rumble				: void : int freq, int duration
asm : 80028FF0, 0043F0 : length2D					: F0 float length : F12 float x, F14 float y

asm : 80029030, 004430 : _heap_create				: heap_node* : int addr, int size
asm : 8002906C, 00446C : _heap_malloc				: ptr data : heap_node* head, int size
asm : 80029164, 004564 : _heap_malloc_tail			: ptr data : heap_node* head, int size
asm : 8002921C, 00461C : _heap_free					: bool failed : heap_node* head, ptr data
asm : 800292C4, 0046C4 : _heap_realloc				: ptr data : heap_node* head, ptr data, int newSize
asm : 800293D4, 0047D4 : cosine						: float cosAngle : int angle "degrees"
asm : 800294B0, 0048B0 : sign						: int sign : int num
asm : 800294C4, 0048C4 : int_to_string				: char* string : int value, char* buf, int base
asm : 80029600, 004A00 : mem_clear					: void : ptr data, int numBytes
asm : 80029620, 004A20 : transform_point			: void : matrix4f* mtx, float inx, float iny, float inz, float ins, float* outx, float* outy, float* outz, float* outs
asm : 80029720, 004B20 : copy_matrix				: void : matrix4f* src, matrix4f* dest
asm : 8002973C, 004B3C : dma_copy					: int size : int start, int end, ptr dest
% 800297D4 -- identical to dma_copy, but does not invalidate cpu cache

asm : 80029900, 004D00 : {warning:internal} _advance_rng "muliply rng value by waterman constant (5D588B65). rng value initialized at boot to count regsiter (BRX:80026050)." : int result : void

asm : 800299FC, 004DFC : rand_int					: int result : int max
asm : 80029A7C, 004E7C : signF						: F0 float sign : F12 float num
asm : 80029AC4, 004EC4 : round						: int : F12 float num
asm : 80029B24, 004F24 : clamp_angle				: F0 float clamped : F12 float angle % also seems to work on integer inputs, still returning a float.
asm : 80029C28, 005028 : get_clamped_angle_diff		: F0 float diff : F12 float a, F14 float b
asm : 80029C80, 005080 : atan2 "uses LUT at 80074414" : F0 float angle "deg" : F12 float startX, F14 float startZ, A2 float endX, A3 float endZ
asm : 80029E20, 005220 : get_player_normal_yaw		: F0 float yaw : void
asm : 80029E50, 005250 : get_player_normal_pitch	: F0 float pitch : void
asm : 80029ED4, 0052D4 : dist2D						: F0 float dist : A2 float Ax, A3 float Ay, F12 float Bx, F14 float By
asm : 80029F2C, 00532C : dist3D						: F0 float dist : F12 float Ax, F14 float Ay, A2 float Az, A3 float Bx, SP[10] float By, SP[14] float Bz
asm : 80029F9C, 00539C : add_vec2D_polar			: void : A0 float* x, A1 float* y, A2 float r, A3 float theta
asm : 8002A034, 005434 : _wrap_trig_lookup_value	: int : float theta
asm : 8002A0B4, 0054B4 : sin_cos_rad				: void : F12 float theta "radians", A1 float* outSinTheta, A2 float* outCosTheta
asm : 8002A16C, 00556C : sin_rad					: F0 float sinAngle : F12 float angle "radians"
asm : 8002A1D0, 0055D0 : cos_rad					: F0 float cosAngle : F12 float angle "radians"
asm : 8002A234, 005634 : sin_cos_deg				: void : F12 float theta "degrees", A1 float* outSinTheta, A2 float* outCosTheta
asm : 8002A2EC, 0056EC : sin_deg					: F0 float sinAngle : F12 float angle "radians"
asm : 8002A350, 005750 : cos_deg					: F0 float cosAngle : F12 float angle "radians"
asm : 8002A3B4, 0057B4 : update_lerp				: F0 float alpha "0.0 - 1.0" : #easing, float start, float end, int elapsed "frames", int duration "frames"

% start of file -->
asm : 8002AC00, 006000 : general_heap_create		: heap_node* head : void
asm : 8002AC28, 006028 : general_heap_malloc		: ptr data : int size
asm : 8002AC50, 006050 : general_heap_malloc_tail	: ptr data : int size
asm : 8002AC78, 006078 : general_heap_free			: bool failed : ptr data
asm : 8002ACA0, 0060A0 : battle_heap_create			: heap_node* head : void
%asm : 8002ACDC : "stub"
asm : 8002ACE4, 0060E4 : heap_malloc "uses battle heap in battle, general heap otherwise" : heap_node* head : void
asm : 8002AD2C, 00612C : heap_free "uses battle heap in battle, general heap otherwise" : bool failed : ptr data
asm : 8002AD74, 006174 : collision_heap_create		: heap_node* head : void
asm : 8002ADB0, 0061B0 : collision_heap_malloc		: ptr data : int size
asm : 8002ADF4, 0061F4 : collision_heap_free		: bool failed : ptr data
% <-- end of file

% start of file -->
asm : 8002AE40, 006240 : get_spirits_rescued "uses StoryProgress" : int numRescued : void
asm : 8002AF40, 006340 : fio_calc_header_checksum "checks currently loaded file" : int checksum : void
asm : 8002AF70, 006370 : fio_validate_header_checksums "checks currently loaded file" : int checksum : void
% asm : 8002AFD8 : fio_has_valid_backup ?
% asm : 8002B04C : fio_flush_backups ?
asm : 8002B0D0, 0064D0 : fio_calc_file_checksum		: int checksum : save_data* fileData
asm : 8002B0F8, 0064F8 : fio_validate_file_checksum	: bool valid : save_data* fileData
asm : 8002B154, 006554 : fio_fetch_saved_file_info "finds a valid save data index that matches the current game file" : bool valid : void
asm : 8002B2D0, 0066D0 : fio_load_game				: bool success : int saveSlot
asm : 8002B374, 006774 : fio_save_game				: bool success : int saveSlot
asm : 8002B42C, 00682C : fio_erase_game				: void : int saveSlot
asm : 8002B490, 006890 : fio_deserialize_state		: void : void
asm : 8002B630, 006A30 : fio_serialize_state		: void : void
asm : 8002B84C, 006C4C : fio_init_flash				: OSPiHandle* : void
asm : 8002B868, 006C68 : fio_read_flash				: bool success : int pageNum, ptr readBuffer, int numBytes
asm : 8002B948, 006D48 : fio_write_flash			: bool success : int pageNum, ptr writeBuffer, int numBytes
asm : 8002BA1C, 006E1C : fio_erase_flash			: void : int pageNum
% <-- end of file

% start of file -->
asm : 8002BF40, 007340 : crash_delay_msec "spinlock using osGetTime" : void : int duration "milliseconds"
% 8002BFB0
% 8002C054
% 8002C1D4
asm : 8002C208, 007608 : crash_printf_string		: void : int posX, int posY, char* fmt, ptr value
asm : 8002C2B8, 0076B8 : crash_print_fpr			: void : int x, int y, int regNum, ptr value
asm : 8002C3B0, 0077B0 : crash_show_handler			: void : crash* crash
asm : 8002C81C, 007C1C : crash_monitor_thread		: void : void
% 8002C890
asm : 8002C8B0, 007CB0 : crash_create_monitor		: void : void
% 8002C94C
% <-- end of file

asm : 8002CA40, 007E40 : nuGfxTaskMgr				: ??? :	???
asm : 8002CB38, 007F38 : nuGfxTaskMgrInit			: ??? :	???
asm : 8002CCC4, 0080C4 : nuGfxTaskStart				: ??? :	???
asm : 8002CE30, 008230 : nuSiMgrInit				: ??? :	???
asm : 8002CF28, 008328 : nuSiSendMesg				: ??? :	??? % int : NUScMsg mesg, ptr data
asm : 8002CF8C, 00838C : nuSiMgrStop				: void : void
asm : 8002CFAC, 0083AC : nuSiMgrRestart				: void : void
asm : 8002CFD0, 0083D0 : nuSiMgrThread				: ??? :	???
asm : 8002D400, 008800 : update_cameras				: ??? :	???
asm : 8002D73C, 008B3C : render_frame				: ??? :	??? % "void" = "bool ???"
asm : 8002E314, 009714 : set_cam_viewport			: void : #camID, int posX, int posY, int width, int height
asm : 8002E4E8, 0098E8 : get_cam_viewport			: void : #camID, int* posX, int* posY, int* width, int* height
asm : 8002E538, 009938 : get_screen_coords			: void : #camID, float x, float y, float z, float* outx, float* outy, float* outz

asm : 8002DEF4, 0092F4 : create_cameras_a			: void : void
asm : 8002E038, 009438 : create_cameras_b			: void : void

asm : 8002E16C, 00956C : initialize_next_camera "initializes first camera with flags == 0, called 4 times to set them all up" : camera* : #camID

asm : 8002E910, 009D10 : do_camera_type_4			: ??? : ???
asm : 8002ECF8, 00A0F8 : do_camera_type_2			: ??? : ???
asm : 8002F290, 00A690 : do_camera_type_1			: ??? : ???
asm : 8002F850, 00AC50 : do_camera_type_0			: ??? : ???
asm : 8002F990, 00AD90 : do_camera_type_6			: ??? : ???
asm : 8002FCE0, 00B0E0 : do_camera_type_unused		: ??? : ???
asm : 80030000, 00B400 : do_camera_type_5			: ??? : ???
asm : 80030458, 00B858 : test_ray_zone_aabb 		: collider* zone "0 if no hit" : int x, int y, int z
asm : 80031494, 00C894 : do_camera_type_3			: ??? : ???
asm : 800334F0, 00E8F0 : set_game_mode				: void : int mode	% there are many of these: battle, world, pause, file select, several others used for intro and main menu...
asm : 80033528, 00E928 : get_game_mode				: int mode : void
asm : 800338D0, 00ECD0 : start_battle_countdown		: void : void
asm : 800338E4, 00ECE4 : step_battle				: ??? : ???	% called from the main game loop to update the battle every frame
asm : 8003497C, 00FD7C : step_pause_menu			: ??? : ???	% called from the main game loop to update the pause menu every frame
asm : 80035D54, 011154 : step_world					: ??? : ???	% called from the main game loop to update the world every frame

asm : 80038080, 013480 : init_demo_data 		: void : void
asm : 800380F4, 0134F4 : next_demo_scene 		: void : void

asm : 80038470, 013870 : stub_npc_callback : void : void
asm : 80038478, 013878 : mtx_ident_mirror_y		: void : matrix4f* mtx

asm : 8003852C, 01392C : init_npc_list			: void : void
asm : 800389CC, 013DCC : free_npc				: void : npc*
asm : 80038ADC, 013EDC : get_npc_by_index		: npc* : int listIndex
asm : 80038AFC, 013EFC : npc_do_world_collision "does traces along yaw, yaw +/- 45, and yaw +/- 135" : void : npc*
asm : 8003900C, 01440C : npc_do_other_npc_collision "does collision with all other npcs" : void : npc*
asm : 800392D8, 0146D8 : npc_do_player_collision : bool collided : npc*
asm : 80039930, 014D30 : update_npcs : void : void
asm : 80039FD0, 0153D0 : appendGfx_npc	: void : npc*
asm : 8003A7F0, 015BF0 : render_npcs			: void : void
asm : 8003AA54, 015E54 : npc_move_heading		: void : npc*, float speed, float yaw

asm : 8003AAEC, 015EEC : get_npc_unsafe "spinlocks forever if npc not found" : npc* : #npcID
asm : 8003AB48, 015F48 : get_npc_safe "returns null if npc not found" : npc* : #npcID
asm : 8003ABA0, 015FA0 : enable_npc_shadow		: void : npc*
asm : 8003ABFC, 015FFC : disable_npc_shadow		: void : npc*
asm : 8003AD24, 016124 : enable_npc_blur		: void : npc*
asm : 8003ADAC, 0161AC : disable_npc_blur		: void : npc*
asm : 8003ADF8, 0161F8 : update_npc_blur		: void : npc*
asm : 8003AE38, 016238 : appedGfx_npc_blur		: void : npc*

asm : 8003B340, 016740 : set_npc_yaw			: void : npc*, float angle
asm : 8003E400, 019800 : clear_encounter_status	: void : void

% asm : 8003E678 : make_npcs 				: void : bool "determines whether they respawn after re-entering map?", int mapID, $NpcGroupList
asm : 8003E730, 019B30 : kill_encounter	"kill all enemies for an enemy's encounter"	: void : enemy* enemy
asm : 8003E7AC, 019BAC : kill_enemy	"free and kill all scripts" : void : enemy* enemy
asm : 8003E2E0, 0196E0 : COPY_set_defeated	"exact copy of func_8003EE40, hardly used" : void : int mapID, int encounterID
% each of these kill running script and starts given one
asm : 8003E94C, 019D4C : bind_enemy_ai 			: void : enemy*, $Script aiScript
asm : 8003E9B4, 019DB4 : bind_enemy_aux			: void : enemy*, $Script auxScript
asm : 8003EA1C, 019E1C : bind_enemy_interact	: void : enemy*, $Script interactScript
asm : 8003EA84, 019E84 : bind_npc_ai			: void : #npcID, $Script aiScript
asm : 8003EB50, 019F50 : bind_npc_aux			: void : #npcID, $Script auxScript
asm : 8003EC1C, 01A01C : bind_npc_interact		: void : #npcID, $Script interactScript
asm : 8003ECE8, 01A0E8 : get_enemy 				: enemy* : #npcID
asm : 8003ED68, 01A168 : get_enemy_safe 		: enemy* : #npcID
asm : 8003EDF0, 01A1F0 : get_defeated			: bool : int mapID, int encounterID
asm : 8003EE40, 01A240 : set_defeated			: void : int mapID, int encounterID

api : 8003EF00, 01A300 : FadeBackgroundToBlack : void : void
api : 8003EF98, 01A398 : UnfadeBackgroundFromBlack : void : void

api : 8003F398, 01A798 : GetCamLookAtObjVector	: Var[0] int x, Var[1] int y, Var[2] int z : void
api : 8003F3F4, 01A7F4 : HasMerleeCasts			: Var[0] bool result : void
api : 8003F580, 01A980 : OnDefeatEnemy			: void : void
api : 8003F6E8, 01AAE8 : OnFleeBattleDrops		: void : void

asm : 80041C5C, 01D05C : show_first_strike_message	: void : void
asm : 800436B0, 01EAB0 : create_npcs		: void : void

% start of file -->
api : 80044180, 01F580 : SetEncounterStatusFlags : void : int flags, bool mode "1 = set | 0 = clear"
api : 80044264, 01F664 : LoadDemoBattle		: void : int demoBattleIndex "0-4"
% api : 80044298 : MakeNpcs         	: void : int, $NpcGroupList
api : 80044340, 01F740 : RemoveNpc        	: void : #npcID
api : 80044478, 01F878 : RemoveEncounter "removes all enemies in the same encounter as given npc" : void : #npcID
api : 8004457C, 01F97C : GetBattleOutcome : void : {out} var outcome "0 = player won, 1 = player lost, 2 = player ran, 3 = enemy ran" % whether the player gets a game over from losing is determined by the battle script. should also be a value for 4...
% 800445A8  "0" *out = parent enemy[C4]
% 800445D4 "14" *out = parent enemy[C8]
api : 80044600, 01FA00 : GetOwnerEncounterTrigger : void : {out} var {outType=#encounterTrigger}

asm : 800446B4, 01FAB4 : start_battle	: void : script_context* script, #songID

api : 8004462C, 01FA2C : DoNpcDefeat		: void : none                % kills parent's defeat script and replaces it with an instance of 80077E38 = "SCRIPT_NpcDefeat"
api : 80044840, 01FC40 : StartBattle		: void : none                % begins a battle with the NPC's assigned encounter
api : 80044860, 01FC60 : StartBattleWith	: void : #songID              % same as the previous, but you can set the song
api : 8004489C, 01FC9C : StartBossBattle	: void : #songID
api : 80044A38, 01FE38 : SetBattleMusic		: void : #songID
api : 80044A78, 01FE78 : BindNpcAI			: void : #npcID, $Script {name=NpcAI}
api : 80044BAC, 01FFAC : BindNpcIdle		: void : #npcID, $Script {name=Idle} % paused while the interaction prompt is active, executes after init is done
api : 80044C2C, 02002C : RestartNpcAI       : void : #npcID               % kills the current AI script and launches a new copy
api : 80044CF0, 0200F0 : EnableNpcAI        : void : #npcID, bool         % pauses/unpauses AI script for a given npc
api : 80044DA4, 0201A4 : SetNpcAux          : void : #npcID, $Script      % kills the current aux script and launches a new one from $Script
api : 80044EB8, 0202B8 : BindNpcAux         : void : #npcID, $Script {name=Aux} % helper script that executes after init script is done, loop for a continous background script
api : 80044F38, 020338 : RestartNpcAux		: void : #npcID               % kills the current aux script and launches a new copy
api : 80044FF0, 0203F0 : EnableNpcAux		: void : #npcID, bool         % pauses/unpauses aux script for a given npc
api : 800450A4, 0204A4 : BindNpcInteract	: void : #npcID, $Script {name=Interact}
api : 80045140, 020540 : BindNpcHit			: void : #npcID, $Script {name=Hit}
api : 800451DC, 0205DC : BindNpcDefeat		: void : #npcID, $Script {name=Defeat} % executes after battle
api : 8004525C, 02065C : SetSelfVar			: void : int, int            % args : index, value
api : 800452C0, 0206C0 : GetSelfVar			: void : int, {out} var
api : 80045320, 020720 : SetNpcVar			: void : #npcID, int, int     % args : #npcID, index, value -- sets "&NPC + 6C + 4*index" to value, looks like there are 16 of them
api : 800453BC, 0207BC : GetNpcVar			: void : #npcID, int index, {out} var value
api : 8004545C, 02085C : SetSelfRotation		: void : int rx, int ry, int rz
api : 8004550C, 02090C : SetSelfEnemyFlags "directly sets flags of parent NPC" : void : int flags
api : 80045524, 020924 : SetSelfEnemyFlagBits	: void : int flags, int mode "1 = set | 0 = clear"
api : 80045614, 020A14 : GetSelfNpcID		: void : {out} var ID
api : 80045640, 020A40 : ClearDefeatedEnemies		: void : void
api : 80045688, 020A88 : SetEnemyFlagBits	: void : #npcID, int flags, int mode "1 = set | 0 = clear"
api : 80045734, 020B34 : GetSelfAnimationFromTable	: void : int index, {out} var animation	

% scr : 80077E38 : NpcDefeat

asm : 80048D50, 024150 : get_coin_drop_amount		: int : enemy*

asm : 80048280, 023680 : spawn_drops				: void : enemy*
asm : 80048FD4, 0243D4 : is_point_within_region		: bool : int shape "0 = circle, 1 = box", float pointX, float pointY, float centerX, float centerY, float sizeX "radius for circle", float sizeZ "unused for circle"

% start file: 8004AB00 -->
% ...
asm : 8004B074, 026474 : nuAuDmaCallBack		: ??? : ???
asm : 8004B224, 026624 : nuAuDmaNew				: ??? : ???
asm : 8004B268, 026668 : nuAuCleanDMABuffers	: ??? : ???
asm : 8004B3EC, 0267EC : alLink					: ??? : ???
asm : 8004B40C, 02680C : alUnlink				: ??? : ???
asm : 800542BC, 02F6BC : al_LoadINIT			: ??? : ???
asm : 8005447C, 02F87C : al_CopyFileTableEntry	: ??? : ???
asm : 800544F8, 02F8F8 : al_LoadPER				: ??? : ???
asm : 800545B4, 02F9B4 : al_LoadPRG				: ??? : ???
asm : 800547C8, 02FBC8 : al_LoadBank			: ??? : ???
asm : 80054E00, 030200 : al_DmaCopy				: ??? : ???
asm : 80054F74, 030374 : al_CopyWords			: ??? : ???
asm : 80054FC0, 0303C0 : al_LoadBKHeaders		: ??? : ???
asm : 800565C0, 0319C0 : alAudioFrame			: ??? : ???
asm : 80057F90, 033390 : alHeapAlloc			: ??? : ???

asm : 80059EF4, 0352F4 : render_effects			: void : void
asm : 8005A450, 035850 : remove_effect			: void : effect*
asm : 8005A4E0, 0358E0 : remove_all_effects		: void : void
asm : 8005A564, 035964 : play_effect			: void : varargs
% <-- end of file

% start of file -->
asm : 8005A6C0, 035AC0 : load_map_script_lib	: void : void
asm : 8005A6F4, 035AF4 : load_map_by_IDs		: void : int areaID, int mapID, int loadType "0 = from another map | 1 = from main menu"
asm : 8005ABD8, 035FD8 : get_current_map_config	: map_config* : void
asm : 8005ABE8, 035FE8 : get_current_map_header	: map_header* : void
asm : 8005ABF8, 035FF8 : get_map_IDs_by_name	: bool foundMap : char* mapName, int* areaID, int* mapID
asm : 8005ACE8, 0360E8 : load_asset_by_name		: ptr data "possibly compressed" : char* name, int* decompressedSize
asm : 8005ADD0, 0361D0 : get_asset_offset		: int romStartOffset : char* name, int* decompressedSize
% <-- end of file

% start of file -->
asm : 8005AEA0, 0362A0 : allocate_hit_tables	: void : void
asm : 8005AF94, 036394 : initialize_collision	: void : void
asm : 8005AFC0, 0363C0 : load_hit_asset "loads hit asset from name at 800D91E0" : void : void
asm : 8005B058, 036458 : load_collision			: void : void
asm : 8005B1A0, 0365A0 : load_stage_collision	: void : char* assetName
asm : 8005B23C, 03663C : load_hit_data			: void : int mode "0 = collison, 1 = zone", ptr filedata % loads internal collision or zone data from a hit file
asm : 8005B780, 036B80 : parent_collider_to_model	: void : int colliderID, int modelIndex
asm : 8005B9A0, 036DA0 : _add_hit_vert_to_buffer	: void : float** buf, float* vert, int* bufSize
asm : 8005B9F4, 036DF4 : _get_hit_vert_index_from_buffer : int bufferIndex : float** buf, float* vert, int* bufSize
asm : 8005BA24, 036E24 : update_collider_transform	: void : int colliderID
asm : 8005BDA8, 0371A8 : get_collider_type_by_id : int : int colliderID
% asm : 8005BDD8 -- gets normal for triangle?
asm : 8005BE10, 037210 : get_collider_center		: void : int colliderID, float* cx, float* cy, float* cz
asm : 8005BE84, 037284 : test_ray_triangle_general "use arbitrary ray from cast data" : bool hit : collider_triangle* tri
asm : 8005C49C, 03789C : test_down_ray_triangle "use ray pointing down from cast origin" : bool hit : collider_triangle* tri
asm : 8005C7A4, 037BA4 : test_up_ray_triangle "use ray pointing up from cast origin" : bool hit : collider_triangle* tri
asm : 8005CCD0, 0380D0 : test_ray_colliders : int colliderID "valid if hit, -1 otherwise. only tests colliders which ignore_flags &= 0" : int ignore_flags, float ray_start_x, float ray_start_y, float ray_start_z, float ray_dir_x, float ray_dir_y, float ray_dir_z, float* out_hit_x,float* out_hit_y, float* out_hit_z, float* out_hit_depth, float* out_hit_nx, float* out_hit_ny, float* out_hit_nz
asm : 8005D124, 038524 : test_ray_zones : int zoneID "valid if hit, -1 otherwise. always casts down" : F12 float ray_start_x, F14 float ray_start_y, float ray_start_z, float ray_dir_x, float ray_dir_y, float ray_dir_z, float* out_hit_x,float* out_hit_y, float* out_hit_z, float* out_hit_depth, float* out_hit_nx, float* out_hit_ny, float* out_hit_nz
asm : 8005D2DC, 0386DC : test_up_ray_collider : bool hit "?" : int ignore_flags, int colliderID, float ray_origin_x, float ray_origin_y, float ray_origin_z, float ray_length, float ray_yaw "deg"
asm : 8005D448, 038848 : test_ray_entities : int entityID : F12 float ray_origin_x, F14 float ray_origin_y, float ray_origin_z, float ray_dir_x,float ray_dir_y, float ray_dir_z, float* out_hit_x, float* out_hit_y, float* out_hit_z, float* out_hit_depth, float* out_hit_nx, float* out_hit_ny, float* out_hit_nz
% api : 8005DB00
% api : 8005DD54
asm : 8005DE10, 039210 : get_npc_pos : void : #npcID "-1 for player", float* outX, float* outY, float* outZ, bool* unknown

% start of file -->
asm : 8005E8B0, 039CB0 : nuBoot				: void : void
asm : 8005E90C, 039D0C : boot_idle "creates main thread, intiailized to boot_main and enters infinite idle loop" : void : void
% <-- end of file

% start of file -->
asm : 8005E9B0, 039DB0 : nuScCreateScheduler	: ??? : ???
asm : 8005EBE0, 039FE0 : nuScExecuteAudio		: ??? : ???
asm : 8005ED14, 03A114 : nuScExecuteGraphics	: ??? : ???
asm : 8005EE30, 03A230 : nuScAddClient			: ??? : ???
asm : 8005EEBC, 03A2BC : nuScRemoveClient		: ??? : ???
asm : 8005EF38, 03A338 : nuScResetClientMesgType	: ??? : ???
asm : 8005EF78, 03A378 : nuScGetGfxMQ			: ??? : ???
asm : 8005EF84, 03A384 : nuScGetAudioMQ			: ??? : ???
asm : 8005EF90, 03A390 : nuScSetFrameBufferNum	: ??? : ???
asm : 8005EF9C, 03A39C : nuScGetFrameRate		: ??? : ???
asm : 8005EFA8, 03A3A8 : nuScEventHandler		: ??? : ???
asm : 8005F0C0, 03A4C0 : nuScEventBroadcast		: ??? : ???
asm : 8005F120, 03A520 : nuScWaitTaskReady		: ??? : ???
asm : 8005F250, 03A650 : nuGfxFuncSet			: ??? : ???
asm : 8005F290, 03A690 : nuGfxPreNMIFuncSet		: ??? : ???
asm : 8005F2D0, 03A6D0 : nuGfxTaskAllEndWait	: ??? : ???
asm : 8005F2F0, 03A6F0 : nuGfxSetCfb			: ??? : ???
asm : 8005F400, 03A800 : nuGfxDisplayOff		: ??? : ???
asm : 8005F430, 03A830 : nuGfxDisplayOn			: ??? : ???
asm : 8005F450, 03A850 : nuPiInit				: ??? : ???
asm : 8005F490, 03A890 : nuPiReadRom			: ??? : ???
asm : 8005F560, 03A960 : nuGfxInit				: ??? : ???
asm : 8005F610, 03AA10 : nuContInit				: ??? : ???
asm : 8005F650, 03AA50 : nuContDataGet			: ??? : ???
asm : 8005F6B0, 03AAB0 : nuContPakMgrInit		: ??? : ???
asm : 8005F6D4, 03AAD4 : nuContPakMgrRemove		: ??? : ???
asm : 8005F6F8, 03AAF8 : contPakOpen			: ??? : ???
asm : 8005F748, 03AB48 : contPakFree			: ??? : ???
asm : 8005F770, 03AB70 : contPakFileReadWrite	: ??? : ???
asm : 8005F7B0, 03ABB0 : contPakFileOpen		: ??? : ???
asm : 8005F864, 03AC64 : contPakFileDelete		: ??? : ???
asm : 8005F8A4, 03ACA4 : contPakFileState		: ??? : ???
asm : 8005F8D0, 03ACD0 : contPakFileNum			: ??? : ???
asm : 8005F8FC, 03ACFC : contPakRepairId		: ??? : ???
asm : 8005F920, 03AD20 : osMotorStop			: ??? : ???
asm : 8005FB10, 03AF10 : contRmbControl			: ??? : ???
asm : 8005FC8C, 03B08C : nuContRmbMgrInit		: ??? : ???
asm : 8005FCEC, 03B0EC : nuContRmbMgrRemove		: ??? : ???
asm : 8005FD10, 03B110 : contRmbCheckMesg		: ??? : ???
asm : 8005FD58, 03B158 : contRmbStartMesg		: ??? : ???
asm : 8005FE90, 03B290 : nuContRmbStart			: ??? : ???
asm : 8005FEF0, 03B2F0 : nuContRmbCheck			: ??? : ???
asm : 8005FF90, 03B390 : nuContRmbModeSet		: ??? : ???
asm : 800600A0, 03B4A0 : nuContRmbForceStop		: ??? : ???
asm : 800600C0, 03B4C0 : nuContRmbForceStopEnd	: ??? : ???
asm : 800600E0, 03B4E0 : nuPiReadRomOverlay		: ??? : ???
asm : 800601F0, 03B5F0 : nuGfxThreadStart		: ??? : ???
asm : 80060248, 03B648 : nuGfxThread			: ??? : ???
asm : 80060310, 03B710 : nuGfxSwapCfbFuncSet	: ??? : ???
asm : 80060350, 03B750 : nuGfxSwapCfb			: ??? : ???
asm : 80060370, 03B770 : nuGfxRetraceWait		: ??? : ???
asm : 800603F0, 03B7F0 : nuSiCallBackAdd		: ??? : ???
asm : 80060490, 03B890 : nuSiCallBackRemove		: ??? : ???
asm : 80060510, 03B910 : nuContMgrInit			: ??? : ???
asm : 800605E8, 03B9E8 : nuContMgrRemove		: ??? : ???
asm : 8006060C, 03BA0C : nuContDataClose		: ??? : ???
asm : 80060634, 03BA34 : nuContDataOpen			: ??? : ???
asm : 8006065C, 03BA5C : contRetrace			: ??? : ???
asm : 80060738, 03BB38 : contReadData			: ??? : ???
asm : 800607B4, 03BBB4 : contReadNW				: ??? : ???
asm : 80060870, 03BC70 : contQuery				: ??? : ???
asm : 800608C0, 03BCC0 : nuContDataLock			: ??? : ???
asm : 800608F0, 03BCF0 : nuContDataUnLock		: ??? : ???
asm : 80060920, 03BD20 : nuContQueryRead		: ??? : ???
asm : 80060940, 03BD40 : osSetIntMask			: ??? : ???
asm : 800609E0, 03BDE0 : osCreatePiManager		: ??? : ???
asm : 80060B70, 03BF70 : osEPiRawStartDma		: ??? : ???
asm : 80060D60, 03C160 : osEPiWriteIo			: ??? : ???
asm : 80060DC0, 03C1C0 : osEPiReadIo			: ??? : ???
asm : 80060E20, 03C220 : osEPiStartDma			: ??? : ???
asm : 80060EC0, 03C2C0 : osEPiLinkHandle		: ??? : ???
asm : 80060F10, 03C310 : osCartRomInit			: ??? : ???
asm : 80061090, 03C490 : osDevMgrMain			: ??? : ???
asm : 80061450, 03C850 : osPiCreateAccessQueue	: ??? : ???
asm : 800614A4, 03C8A4 : osPiGetAccess			: ??? : ???
asm : 80061510, 03C910 : osPiRelAccess			: ??? : ???
asm : 80061540, 03C940 : osAiGetLength			: ??? : ???
asm : 80061550, 03C950 : osAiGetStatus			: ??? : ???
asm : 80061560, 03C960 : osAiSetFrequency		: ??? : ???
asm : 80061680, 03CA80 : osAiSetNextBuffer		: ??? : ???
asm : 80061720, 03CB20 : osInvalDCache			: ??? : ???
asm : 800617D0, 03CBD0 : osInvalICache			: ??? : ???
asm : 80061850, 03CC50 : osWritebackDCache		: ??? : ???
asm : 800618D0, 03CCD0 : osWritebackDCacheAll	: ??? : ???
asm : 80061900, 03CD00 : osContStartQuery		: ??? : ???
asm : 80061980, 03CD80 : osContGetQuery			: ??? : ???
asm : 800619A0, 03CDA0 : osContStartReadData	: ??? : ???
asm : 80061A28, 03CE28 : osContGetReadData		: ??? : ???
asm : 80061AC4, 03CEC4 : osPackReadData			: ??? : ???
asm : 80061B80, 03CF80 : osContInit				: ??? : ???
asm : 80061D1C, 03D11C : osContGetInitData		: ??? : ???
asm : 80061DD0, 03D1D0 : osPackRequestData		: ??? : ???
asm : 80061E90, 03D290 : osVirtualToPhysical	: ??? : ???
asm : 80061EF0, 03D2F0 : sqrtf					: ??? : ???
asm : 80061F00, 03D300 : coss					: ??? : ???
asm : 80061F30, 03D330 : guFrustumF				: ??? : ???
asm : 80062060, 03D460 : guFrustum				: ??? : ???
asm : 800621B0, 03D5B0 : guLookAtF				: ??? : ???
asm : 80062530, 03D930 : guLookAt				: ??? : ???
asm : 800628C0, 03DCC0 : guLookAtHiliteF		: ??? : ???
asm : 80063244, 03E644 : guLookAtHilite			: ??? : ???
asm : 80063320, 03E720 : guLookAtReflectF		: ??? : ???
asm : 80063898, 03EC98 : guLookAtReflect		: ??? : ???
asm : 80063910, 03ED10 : guOrthoF				: ??? : ???
asm : 80063A40, 03EE40 : guOrtho				: ??? : ???
asm : 80063B90, 03EF90 : guPerspectiveF			: ??? : ???
asm : 80063D40, 03F140 : guPerspective			: ??? : ???
asm : 80063F10, 03F310 : guPositionF			: ??? : ???
asm : 800640E8, 03F4E8 : guPosition				: ??? : ???
asm : 800642D0, 03F6D0 : guRotateAnglesF		: ??? : ???	% guRotateRPYF
asm : 80064458, 03F858 : guRotateAngles			: ??? : ???
asm : 800645F0, 03F9F0 : sins					: ??? : ???
asm : 80064650, 03FA50 : bcopy					: ptr dest : ptr src, ptr dest, int numBytes
asm : 80064970, 03FD70 : bzero					: ??? : ???
asm : 80064A10, 03FE10 : strchr					: ??? : ???
asm : 80064A50, 03FE50 : strlen					: ??? : ???
asm : 80064A74, 03FE74 : memcpy					: ??? : ???
asm : 80064AA0, 03FEA0 : _Printf				: ??? : ???
asm : 80065020, 040420 : _Putfld				: ??? : ???
asm : 800654F0, 0408F0 : sprintf    	 		: ptr endPos : ptr dest, char* format, char* string, ptr
asm : 80065548, 040948 : proutSprintf			: ??? : ???
asm : 80065580, 040980 : osCreateMesgQueue		: ??? : ???
asm : 800655B0, 0409B0 : osJamMesg				: ??? : ???
asm : 800656F0, 040AF0 : osRecvMesg				: ??? : ???
asm : 80065820, 040C20 : osSendMesg				: ??? : ???
asm : 80065950, 040D50 : osSetEventMesg			: ??? : ???
asm : 80065A00, 040E00 : osGetCount				: ??? : ???
asm : 80065A10, 040E10 : osSpTaskLoad			: ??? : ???
asm : 80065C1C, 04101C : osSpTaskStartGo		: ??? : ???
asm : 80065C50, 041050 : osSpTaskYield			: ??? : ???
asm : 80065C70, 041070 : osSpTaskYielded		: ??? : ???
asm : 80065CC0, 0410C0 : osSiRawStartDma		: ??? : ???
asm : 80065D70, 041170 : osSiCreateAccessQueue	: ??? : ???
asm : 80065DC4, 0411C4 : osSiGetAccess			: ??? : ???
asm : 80065E30, 041230 : osSiRelAccess			: ??? : ???
asm : 80065E60, 041260 : osCreateThread			: ??? : ???
asm : 80065F30, 041330 : osGetThreadPri			: ??? : ???
asm : 80065F50, 041350 : osSetThreadPri			: ??? : ???
asm : 80066020, 041420 : osStartThread			: ??? : ???
asm : 80066140, 041540 : osStopThread			: ??? : ???
asm : 80066200, 041600 : osDequeueThread		: ??? : ???
asm : 80066240, 041640 : osYieldThread			: ??? : ???
asm : 80066290, 041690 : osGetActiveQueue		: ??? : ???
asm : 800662A0, 0416A0 : osGetTime				: ??? : ???
asm : 80066330, 041730 : osSetTime				: ??? : ???
asm : 80066350, 041750 : osSetTimer				: ??? : ???
asm : 80066480, 041880 : osTimerServicesInit	: ??? : ???
asm : 800664D4, 0418D4 : osTimerInterrupt		: ??? : ???
asm : 80066610, 041A10 : osSetTimerIntr			: ??? : ???
asm : 80066690, 041A90 : osInsertTimer			: ??? : ???
asm : 800667A0, 041BA0 : osMapTLB				: ??? : ???
asm : 80066860, 041C60 : osProbeTLB				: ??? : ???
asm : 80066920, 041D20 : osUnmapTLB				: ??? : ???
asm : 80066960, 041D60 : osUnmapTLBAll			: ??? : ???
asm : 800669B0, 041DB0 : osViGetCurrentFramebuffer	: ??? : ???
asm : 800669F0, 041DF0 : osViGetNextFramebuffer		: ??? : ???
asm : 80066A30, 041E30 : osViGetCurrentMode		: ??? : ???
asm : 80066A70, 041E70 : osCreateViManager		: ??? : ???
asm : 80066C10, 042010 : viMgrMain				: ??? : ???
asm : 80066DB0, 0421B0 : osViSetEvent			: ??? : ???
asm : 80066E10, 042210 : osViSetMode			: ??? : ???
asm : 80066E60, 042260 : osViSetSpecialFeatures	: ??? : ???
asm : 80066FD0, 0423D0 : osViSetYScale			: ??? : ???
asm : 80067020, 042420 : osViSwapBuffer			: ??? : ???
asm : 80067070, 042470 : osViSwapContext		: ??? : ???
asm : 80067380, 042780 : osViBlack				: ??? : ???
asm : 800673E0, 0427E0 : osViRepeatLine			: ??? : ???
asm : 80067440, 042840 : guMtxIdent				: ??? : ???
asm : 800674A0, 0428A0 : guMtxIdentF			: ??? : ???
asm : 80067500, 042900 : guMtxF2L				: ??? : ???
asm : 80067580, 042980 : guMtxL2F				: ??? : ???
asm : 80067600, 042A00 : guMtxCatF				: ??? : ???
asm : 80067700, 042B00 : guScale				: ??? : ???
asm : 800677C0, 042BC0 : guScaleF				: ??? : ???
asm : 80067820, 042C20 : guTranslate			: ??? : ???
asm : 80067900, 042D00 : guTranslateF			: ??? : ???
asm : 80067960, 042D60 : guMtxCat				: ??? : ???
asm : 800679E0, 042DE0 : guMtxXFML				: ??? : ???
asm : 80067A70, 042E70 : guMtxXFMF				: ??? : ???
asm : 80067B20, 042F20 : guRotateF				: ??? : ???
asm : 80067C80, 043080 : guRotate				: ??? : ???
asm : 80067E00, 043200 : osMotorAccess			: ??? : ???
asm : 80067F44, 043344 : osMotorInit			: ??? : ???
asm : 80068190, 043590 : osPfsAllocateFile		: ??? : ???
asm : 8006849C, 04389C : osPfsDeclearPage		: ??? : ???
asm : 800685C0, 0439C0 : osPfsDeleteFile		: ??? : ???
asm : 8006876C, 043B6C : osPfsReleasePages		: ??? : ???
asm : 800687E0, 043BE0 : osPfsReadWriteFile		: ??? : ???
asm : 80068C20, 044020 : osPfsFileState			: ??? : ???
asm : 80068DC0, 0441C0 : osPfsFindFile			: ??? : ???
asm : 80068F80, 044380 : osPfsFreeBlocks		: ??? : ???
asm : 80069090, 044490 : osPfsNumFiles			: ??? : ???
asm : 80069190, 044590 : osPfsInitPak			: ??? : ???
asm : 80069388, 044788 : osPfsCheckRamArea		: ??? : ???
asm : 80069460, 044860 : osPfsRepairId			: ??? : ???
asm : 800694C0, 0448C0 : osPfsGetStatus			: ??? : ???
asm : 800695B0, 0449B0 : osPfsRequestOneChannel	: ??? : ???
asm : 80069644, 044A44 : osPfsGetOneChannelData	: ??? : ???
asm : 800696D0, 044AD0 : osPfsSelectBank		: ??? : ???
asm : 80069740, 044B40 : osSumcalc				: ??? : ???
asm : 80069774, 044B74 : osIdCheckSum			: ??? : ???
asm : 800697B8, 044BB8 : osRepairPackId			: ??? : ???
asm : 80069AA4, 044EA4 : osCheckPackId			: ??? : ???
asm : 80069C08, 045008 : osGetId				: ??? : ???
asm : 80069DD4, 0451D4 : osCheckId				: ??? : ???
asm : 80069E8C, 04528C : osPfsRWInode			: ??? : ???
asm : 8006A1D0, 0455D0 : osContRamRead			: ??? : ???
asm : 8006A3C0, 0457C0 : osContRamWrite			: ??? : ???
asm : 8006A630, 045A30 : osAfterPreNMI			: ??? : ???
asm : 8006A708, 045B08 : osInitialize			: ??? : ???
asm : 8006AA00, 045E00 : osExceptionPreamble	: ??? : ???
asm : 8006AA34, 045E34 : savecontext			: ??? : ???
asm : 8006AB34, 045F34 : savercp				: ??? : ???
asm : 8006AB6C, 045F6C : endrcp					: ??? : ???
asm : 8006AC08, 046008 : handle_interrupt		: ??? : ???
asm : 8006AC0C, 04600C : next_interrupt			: ??? : ???
asm : 8006AC44, 046044 : IP6_Hdlr				: ??? : ???
asm : 8006AC50, 046050 : IP7_Hdlr				: ??? : ???
asm : 8006AC5C, 04605C : counter				: ??? : ???
asm : 8006AC80, 046080 : cart					: ??? : ???
asm : 8006ACC8, 0460C8 : rcp					: ??? : ???
asm : 8006AD2C, 04612C : sp_other_break			: ??? : ???
asm : 8006AD3C, 04613C : vi						: ??? : ???
asm : 8006AD64, 046164 : ai						: ??? : ???
asm : 8006AD90, 046190 : si						: ??? : ???
asm : 8006ADB8, 0461B8 : pi						: ??? : ???
asm : 8006AE0C, 04620C : dp						: ??? : ???
asm : 8006AE30, 046230 : NoMoreRcpInts			: ??? : ???
asm : 8006AE3C, 04623C : prenmi					: ??? : ???
asm : 8006AE6C, 04626C : firstnmi				: ??? : ???
asm : 8006AEA0, 0462A0 : sw2					: ??? : ???
asm : 8006AEC4, 0462C4 : sw1					: ??? : ???
asm : 8006AEE8, 0462E8 : handle_break			: ??? : ???
asm : 8006AF00, 046300 : redispatch				: ??? : ???
asm : 8006AF34, 046334 : enqueueRunning			: ??? : ???
asm : 8006AF4C, 04634C : panic					: ??? : ???
asm : 8006AF7C, 04637C : send_mesg				: ??? : ???
asm : 8006AFC4, 0463C4 : send_done				: ??? : ???
asm : 8006B038, 046438 : handle_CPU				: ??? : ???
asm : 8006B06C, 04646C : osEnqueueAndYield		: ??? : ???
asm : 8006B16C, 04656C : noEnqueue				: ??? : ???
asm : 8006B174, 046574 : osEnqueueThread		: ??? : ???
asm : 8006B1BC, 0465BC : osPopThread			: ??? : ???
asm : 8006B1CC, 0465CC : osNop					: ??? : ???
asm : 8006B1D4, 0465D4 : osDispatchThread		: ??? : ???
asm : 8006B1F4, 0465F4 : osDispatchThreadSave	: ??? : ???
asm : 8006B350, 046750 : osCleanupThread		: ??? : ???
asm : 8006B360, 046760 : osDisableInt			: ??? : ???
asm : 8006B3D0, 0467D0 : osRestoreInt			: ??? : ???
asm : 8006B3F0, 0467F0 : osSetGlobalIntMask		: ??? : ???
asm : 8006B430, 046830 : osResetGlobalIntMask	: ??? : ???
asm : 8006B480, 046880 : osPiRawStartDma		: ??? : ???
asm : 8006B550, 046950 : osPiGetCmdQueue		: ??? : ???
asm : 8006B570, 046970 : osEPiRawReadIo			: ??? : ???
asm : 8006B6E0, 046AE0 : osEPiRawWriteIo		: ??? : ???
asm : 8006B850, 046C50 : osAiDeviceBusy			: ??? : ???
asm : 8006B870, 046C70 : bcmp					: ??? : ???
asm : 8006B980, 046D80 : _Litob					: ??? : ???
asm : 8006BBD0, 046FD0 : _Ldtob					: ??? : ???
asm : 8006C01C, 04741C : _Ldunscale				: ??? : ???
asm : 8006C0B4, 0474B4 : _Genld					: ??? : ???
asm : 8006C660, 047A60 : osGetCause				: ??? : ???
asm : 8006C670, 047A70 : osGetSR				: ??? : ???
asm : 8006C680, 047A80 : osSetCompare			: ??? : ???
asm : 8006C690, 047A90 : osSetFpcCsr			: ??? : ???
asm : 8006C6A0, 047AA0 : osSetSR				: ??? : ???
asm : 8006C6B0, 047AB0 : osSetWatchLo			: ??? : ???
asm : 8006C6C0, 047AC0 : osSpDeviceBusy			: ??? : ???
asm : 8006C6E0, 047AE0 : osSpGetStatus			: ??? : ???
asm : 8006C6F0, 047AF0 : osSpSetStatus			: ??? : ???
asm : 8006C700, 047B00 : osSpSetPc				: ??? : ???
asm : 8006C730, 047B30 : osSpRawStartDma		: ??? : ???
asm : 8006C7C0, 047BC0 : osSiRawReadIo			: ??? : ???
asm : 8006C810, 047C10 : osSiRawWriteIo			: ??? : ???
asm : 8006C860, 047C60 : osContAddressCrc		: ??? : ???
asm : 8006C8CC, 047CCC : osContDataCrc			: ??? : ???
asm : 8006C950, 047D50 : osDestroyThread		: ??? : ???
asm : 8006CA30, 047E30 : osMapTLBRdb			: ??? : ???
asm : 8006CA90, 047E90 : osViInit				: ??? : ???
asm : 8006CBA0, 047FA0 : osViGetCurrentContext	: ??? : ???
asm : 8006CBC0, 047FC0 : guNormalize			: ??? : ???
asm : 8006CC20, 048020 : osPfsChecker			: ??? : ???
asm : 8006D080, 048480 : corrupted_init			: ??? : ???
asm : 8006D1D8, 0485D8 : corrupted				: ??? : ???
asm : 8006D340, 048740 : osPfsIsPlug			: ??? : ???
asm : 8006D4BC, 0488BC : osPfsRequestData		: ??? : ???
asm : 8006D560, 048960 : osPfsGetInitData		: ??? : ???
asm : 8006D620, 048A20 : ldiv					: ??? : ???
asm : 8006D6A4, 048AA4 : lldiv					: ??? : ???
asm : 8006D7E0, 048BE0 : osSiDeviceBusy			: ??? : ???
asm : 8006ED40, 04A140 : strcpy					: ??? : ???
asm : 8006ED70, 04A170 : strcmp					: ??? : ???
asm : 8006EDB0, 04A1B0 : memset					: ??? : ???
asm : 8006EDF0, 04A1F0 : decode_yay0			: void : ptr src, ptr dest
asm : 8006EF68, 04A368 : osFlashInit			: OSPiHandle* : void
asm : 8006F0B8, 04A4B8 : osFlashReadStatus		: ??? : ???
asm : 8006F184, 04A584 : osFlashReadId			: ??? : ???
asm : 8006F29C, 04A69C : osFlashClearStatus		: ??? : ???
asm : 8006F308, 04A708 : osFlashAllErase		: ??? : ???
asm : 8006F424, 04A824 : osFlashSectorErase		: ??? : ???
asm : 8006F550, 04A950 : osFlashWriteBuffer		: ??? : ???
asm : 8006F61C, 04AA1C : osFlashWriteArray		: ??? : ???
asm : 8006F75C, 04AB5C : osFlashReadArray		: ??? : ???

asm : 8006FAD0, 04AED0 : fx_walk_large			: void : void
asm : 8006FB30, 04AF30 : fx_walk_normal			: void : void

asm : 8006FE90, 04B290 : fx_emote				: void : void

asm : 80070790, 04BB90 : fx_sweat "effect 0x28"	: void : void
asm : 800707F0, 04BBF0 : fx_sleep_bubble "effect 0x29" : void : void

asm : 80072C90, 04E090 : load_battle 			: void : int battleID
asm : 80072D2C, 04E12C : setup_demo_player "assigns stats and game data for demo player" : void : void
asm : 80072E14, 04E214 : load_demo_battle		: void : int index
% 8007301C starts a battle without first strike, demo-related?
% 80073070 starts a battle with first strike, demo-related?
% <-- end of file

%}
% end at 8009A5B0
	
/%
RAM: 800DC500 - 8010C920
ROM:    759B0 -	   A5DD0
%/
%{

asm : 800DDFD0, 077480 : test_below_player : int hitObjectID "collider ID or entityID | 4000" : float yaw, float radius, {out} float* out_hit_x, {out} float* out_hit_y, {out} float* out_hit_z, {out} float* out_hit_depth, {out} float* out_hit_rx, {out} float* out_hit_rz, {out} float*, {out} float*
asm : 800DE54C, 0779FC : trace_below_player "starts from given position and traces down for player collision channel" : int hitObjectID "collider ID or entityID | 4000" : {out} float* posX, {out} float* posY, {out} float* posZ, {out} float* length

asm : 800DEA08, 077EB8 : trace_above_player "starts from given position and traces up for player collision channel, only detects collision up to 10 units from the given position" : int hitObjectID "collider ID or entityID | 4000" : {out} float* posX, {out} float* posY, {out} float* posZ, {out} float* length

asm : 800DF460, 078910 : test_player_lateral : int hitObjectID "collider ID or entityID | 4000" : player_status* player, {out} float* posX, {out} float* posY, {out} float* posZ, float distance "in addition to radius" , float yaw "in world coords"

asm : 800DF740, 078BF0 : update_player : void : void

asm : 800DFA00, 078EB0 : check_input_use_partner	: void : void

asm : 800DFC50, 079100 : clear_player_status : void : void

asm : 800E00B0, 079560 : enable_player_shadow		: void : void
asm : 800E00E4, 079594 : disable_player_shadow		: void : void

asm : 800E0114, 0795C4 : disable_player_static_collisions "disable lateral collisions with the world while the player is standing still" : int disableCount : void
asm : 800E0140, 0795F0 : enable_player_static_collisions "enable lateral collisions with the world while the player is standing still": int disableCount : void

asm : 800E0178, 079628 : disable_player_input		: int disableCount : void
asm : 800E01A4, 079654 : enable_player_input		: int disableCount : void

asm : 800E1138, 07A5E8 : render_player				: void : void
asm : 800E1168, 07A618 : render_player_model		: void : void
asm : 800E12F4, 07A7A4 : appendGfx_player		: void : void
asm : 800E1704, 07ABB4 : appendGfx_player_spin	: void : void % only used when speedy spinning

asm : 800E1BC4, 07B074 : update_player_shadow "update shadow and floorBelow collider" : void : void

asm : 800E1F90, 07B440 : update_player_input : void : void

asm : 800E27E0, 07BC90 : collision_main_above : int hitID : void
asm : 800DE7E4, 077C94 : collision_check_above : int hitID : player_status* player, float* posX, float* posY, float* posZ, float* depth, float yaw
asm : 800E363C, 07CAEC : collision_main_lateral : void : void
asm : 800E4308, 07D7B8 : collision_check_player_intersecting_world : int hitID : int type, int heightOffset
asm : 800DEC04, 0780B4 : do_lateral_collision "do a collision trace and clip movement along the trace direction using normal of hit object" : int hitID : int type, player_status*, float* posX, float* posY, float* posZ, float moveDepth, float yaw

asm : 800E2304, 07B7B4 : input_to_move_vector : void : float* angle, float* magnitude "0 to 70"

asm : 800E2778, 07BC28 : move_player				: void : int duration "frames", float yaw, float speed

asm : 800E2D18, 07C1C8 : update_fall_state : void : void
asm : 800E2FD0, 07C480 : gravity_use_jump_parms : void : A1 player_status* player
asm : 800E306C, 07C51C : gravity_use_fall_parms : void : void
asm : 800E3448, 07C8F8 : integrate_gravity : float velocity : void
asm : 800E3278, 07C728 : phys_player_land : void : void
asm : 800E4FCC, 07E47C : check_input_midair_jump	: void : void
asm : 800E5088, 07E538 : get_current_partner_id : #partnerID : void
asm : 800E54E0, 07E990 : save_ground_pos : void : void
asm : 800E5DA4, 07F254 : set_action_state			: void : #actionStateID
asm : 800E5F68, 07F418 : update_locomotion_state	: void : void % update run/walk state based on speed and slowgo
asm : 800E5FD0, 07F480 : start_falling				: void : void
asm : 800E6034, 07F4E4 : start_bounce_a				: void : void % bouncing off kooper, perhaps also enemies jumped on?
asm : 800E608C, 07F53C : start_bounce_b				: void : void % bouncing off kooper, perhaps also enemies jumped on?
asm : 800E60E0, 07F590 : check_input_hammer			: bool : void
asm : 800E6160, 07F610 : check_input_jump			: bool : void
asm : 800E6268, 07F718 : check_input_spin			: void : void

asm : 800E69DC, 07FE8C : can_pause : bool : #buttons current, #buttons pressed

asm : 800E6B78, 080028 : setup_partner_popup : int count : popup_data*
asm : 800E6C44, 0800F4 : setup_item_popup : int count : popup_data*

asm : 800E6CE4, 080194 : check_input_open_menus : void : void

asm : 800E728C, 08073C : check_input_status_menu	: void : void
% <-- end of file

% start of file -->
asm : 800E73A0, 080850 : clear_player_data			: void : void
asm : 800E7564, 080A14 : get_player_data			: player_data* : void	% returns constant 8010F290
asm : 800E7574, 080A24 : add_item					: int addedPosition "-1 if no room" : int itemID
asm : 800E75EC, 080A9C : get_item_count				: int numItems : void
asm : 800E7620, 080AD0 : get_item_empty_count		: int numEmpty : void
asm : 800E7644, 080AF4 : find_item "works for both keys and consumables" : int slotNum "-1 if not found" : int itemID
asm : 800E76CC, 080B7C : sort_items					: void : void
asm : 800E773C, 080BEC : add_badge					: int addedPosition "-1 if no room" : int itemID
asm : 800E77C4, 080C74 : store_item					: int addedPosition "-1 if no room" : int itemID
asm : 800E7814, 080CC4 : get_stored_count			: int numItems : void
asm : 800E7848, 080CF8 : get_stored_empty_count		: int numEmpty : void
asm : 800E786C, 080D1C : enforce_hpfp_limits		: void : void
asm : 800E7934, 080DE4 : initialize_status_menu		: void : void
asm : 800E7CA4, 081154 : status_menu_draw_number	: void : int iconID, int posX, int posY, int value, int numDigits
asm : 800E7E34, 0812E4 : status_menu_draw_stat		: void : int iconID, int posX, int posY, int min, int max
asm : 800E80B4, 081564 : update_status_menu			: void : void
asm : 800E92D8, 082788 : coin_counter_draw_content	: void : ???, A1 int posX, A2 int posY
asm : 800E93DC, 08288C : update_coin_counter		: void : void
asm : 800E9518, 0829C8 : show_coin_counter			: void : void
asm : 800E9698, 082B48 : hide_coin_counter			: void : void

api : 800E96F8, 082BA8 : ShowCoinCounter "shows coin counter in lower left hand corner" : void : bool "1 = show | 0 = hide"

asm : 800E973C, 082BEC : draw_status_ui "draw status menu and coin counter" : void : void
asm : 800E9760, 082C10 : open_status_menu_long "opens for 210 frames" : void : void
asm : 800E978C, 082C3C : open_status_menu_short "opens for 105 frames" : void : void

asm : 800E9910, 082DC0 : is_status_menu_visible					: bool : void
asm : 800E9920, 082DD0 : status_menu_start_blinking_hp			: void : void
asm : 800E9964, 082E14 : status_menu_stop_blinking_hp			: void : void
asm : 800E998C, 082E3C : status_menu_start_blinking_fp			: void : void
asm : 800E99D0, 082E80 : status_menu_stop_blinking_fp			: void : void
asm : 800E99F4, 082EA4 : status_menu_start_blinking_coins		: void : void
asm : 800E9A38, 082EE8 : status_menu_stop_blinking_coins		: void : void
asm : 800E9A60, 082F10 : status_menu_start_blinking_sp			: void : void
asm : 800E9A94, 082F44 : status_menu_stop_blinking_sp			: void : void
asm : 800E9AB8, 082F68 : status_menu_start_blinking_sp_bars		: void :  int numBarsToBlink
asm : 800E9AE4, 082F94 : status_menu_start_blinking_starpoints	: void : void
asm : 800E9B0C, 082FBC : status_menu_stop_blinking_starpoints	: void : void
asm : 800E9B30, 082FE0 : decrement_status_menu_disabled		: void : void
asm : 800E9B54, 083004 : increment_status_menu_disabled		: void : void
asm : 800E9B6C, 08301C : sync_status_menu "set displayed values to real values" : void : void
asm : 800E9BB0, 083060 : reset_status_menu			: void : void
asm : 800E9D48, 0831F8 : is_ability_active			: int activeCount : #abilityID
asm : 800EA0B8, 083568 : is_partner_ability_active "STUB -- unused in vanilla game" : int activeCount : #abilityID
asm : 800EA0C0, 083570 : add_coins					: int newCoinTotal : int amount
asm : 800EA128, 0835D8 : add_star_points			: int newValue : int amount
asm : 800EA170, 083620 : add_star_pieces			: int newValue : int amount
asm : 800EA5A4, 083A54 : is_current_partner_flying : void : bool flying
asm : 800EA1B4, 083664 : increment_max_SP			: void : void
asm : 800EA1D8, 083688 : set_max_SP					: void : int value
asm : 800EA1F4, 0836A4 : add_SP						: void : int amount
asm : 800EA264, 083714 : recover_fp					: int newValue : int amount "-1 heals to full, -2 heals to full and increments maxFP by one"
asm : 800EA2CC, 08377C : recover_hp					: int newValue : int amount "-1 heals to full, -2 heals to full and increments maxHP by one"
asm : 800EA334, 0837E4 : subtract_hp				: void : int amount "use negative values to set HP = 1"
asm : 800EA360, 083810 : has_full_hp				: bool : void
asm : 800EA37C, 08382C : has_full_fp				: bool : void
asm : 800EA398, 083848 : add_fortress_keys			: int newValue : int amount
asm : 800EA3B8, 083868 : subtract_fortress_keys		: int newValue : int amount
asm : 800EA3E4, 083894 : get_fortress_key_count		: int value : void
% <-- end of file

asm : 800EA400, 0838B0 : use_consumable				: script_context* itemUseScript : int itemIndex "which item to use from consumables inventory, stores itemID in Var[A] of returned script"
asm : 800EA47C, 08392C : remove_consumable "remove item at 8010CD20" : void : void

asm : 800EB314, 0847C4 : use_partner_ability		: bool : void

asm : 800EB8A8, 084D58 : enable_partner_walking : void : npc* partner, int
asm : 800ED310, 0867C0 : enable_partner_flying : void : npc* partner, int
asm : 800EF328, 0887D8 : enable_partner_ai : void : void

asm : 800ED4B8, 086968 : update_player_move_history	: void : npc* partner
asm : 800EF45C, 08890C : clear_partner_move_history	: void : npc* partner

%asm : 800EF600 : enable_player_input	: int disableCount : void
%asm : 800EF628 : disable_player_input	: int disableCount : void

% asm : 800F4648 : draw_submenu_title : void : ???, int posX, int posY -- for the little menus 'items'/'partner'/etc

asm : 800F52E0, 08E790 : draw_box "see additional documentation" : bool failed : int flags, int style, int posX, int posY, int posZ, int width, int height, int opacity, int fogColorArgs, float scaleX, float scaleY, float rotX, float rotY, float rotZ, code fpDrawContents, int drawContentsArg0, matrix4f* catMtx, int txShiftX, int txShiftY, ???
% 800F7B28 <-- end of file, also end of functions for this section
%}
% end at 8010C920

/%
RAM: 8010F6D0 - 801512B0
ROM:    A5DD0 -	   E79B0
%/
%{

asm : 8010F6D0, 0A5DD0 : update_entities			: void : void
asm : 8010FA98, 0A6198 : update_shadows				: void : void

asm : 8011022C, 0A692C : update_entity_transform_matrix		: void : entity*
asm : 80110374, 0A6A74 : update_shadow_transform_matrix : void : shadow*
asm : 801104A4, 0A6BA4 : update_entity_inverse_rotation_matrix : void : entity*
asm : 801105E8, 0A6CE8 : get_entity_by_index		: entity* : int index
asm : 80110604, 0A6D04 : get_shadow_by_index		: shadow* : int index
asm : 80110620, 0A6D20 : get_entity_list			: entity** : void
asm : 8011064C, 0A6D4C : get_shadow_list			: shadow** : void
asm : 80110AAC, 0A71AC : test_player_entity_aabb	: bool intersects : entity* entity
asm : 80110BB0, 0A72B0 : is_player_action_state		: bool : #actionStateID

asm : 801108B8, 0A6FB8 : entity_get_collision_flags "checks entity against objects the player is touching, hammering, etc." : int flags : entity*
asm : 80110C14, 0A7314 : load_area_specific_entity_data		: void : void
asm : 801118C4, 0A7FC4 : create_entity				: int entityIndex : static_entity_data* data, int x, int y, int z, int flags
asm : 80111BD8, 0A82D8 : create_shadow_from_data	: int shadowIndex : static_shadow_data* data, float x, float y, float z
api : 80111D38, 0A8438 : MakeEntity       			: Var[0] int entityIndex : varargs % static_entity_data*, x, y, z, angle, ...
api : 80111FB0, 0A86B0 : AssignScript				: void : $Script
api : 80111FF8, 0A86F8 : AssignAreaFlag				: void : int index
api : 801120B8, 0A87B8 : AssignFlag					: void : int flagVar
api : 8011206C, 0A876C : AssignBlockFlag			: void : int flagVar
api : 80112114, 0A8814 : AssignPanelFlag			: void : int flagVar
api : 80112170, 0A8870 : AssignCrateFlag			: void : int flagVar
asm : 801121CC, 0A88CC : create_entity_shadow		: int shadowIndex : entity* entity, float x, float y, float z
asm : 80112260, 0A8960 : create_shadow_type			: int shadowIndex : int type "0-5 inclusive", float x, float y, float z

asm : 8011285C, 0A8F5C : set_standard_shadow_scale : void : shadow*, float height
asm : 801129D4, 0A90D4 : set_shadow_scale_peach : void : shadow*, float height

asm : 80112E78, 0A9578 : step_current_game_mode		: void : void
asm : 80112F58, 0A9658 : render_ui					: void : void
asm : 80113090, 0A9790 : appendGfx_model : void : model*
asm : 80114D6C, 0AB46C : load_tile_header			: void : char* textureName, int romOffset, int size
asm : 80115B0C, 0AC20C : get_model_property			: int* : model_node* mdl, int property
asm : 80115B44, 0AC244 : _load_model_textures "recursive part for load_model_textures" : void : model_node* mdl, int romOffset, int size
asm : 80115C24, 0AC324 : load_model_textures 		: void : model_node* model, int romOffset, int size
asm : 80115D44, 0AC444 : clear_model_data			: void : void
asm : 80115FE8, 0AC6E8 : init_model_data			: void : void
asm : 8011612C, 0AC82C : calculate_model_sizes		: void : void
asm : 80116B90, 0AD290 : render_models				: void : void
asm : 80117C94, 0AE394 : appendGfx_model_group : void : model*
asm : 8011AD30, 0B1430 : get_model_from_list_index	: model* : int listIndex
asm : 8011AD48, 0B1448 : load_data_for_models "loads textures and prepares transformations" : void : model_node* mdl "typically root", int romOffset, int size
asm : 8011ADC8, 0B14C8 : load_model_transforms		: void : model_node* mdl, model_node* parent, matrix4f* mdlTxMtx, int treeDepth
asm : 8011B010, 0B1710 : get_model_list_index_from_tree_index	: int listIndex : int treeIndex
asm : 8011B0EC, 0B17EC : get_model_center_and_size  : void : modelID, float* outCenterX, float* outCenterY, float* outCenterZ, float* outSizeX,float* outSizeY, float* outSizeZ
asm : 8011B6F0, 0B1DF0 : clone_model "fully copies srcModel, changing only modelID" : void : int srcModelID, int newModelID

asm : 8011BB50, 0B2250 : enable_world_fog : void : void
asm : 8011BB64, 0B2264 : disable_world_fog : void : void
asm : 8011BB74, 0B2274 : set_world_fog_dist : void : int start, int end
asm : 8011BB88, 0B2288 : set_world_fog_color "each channel 0-255" : void : int R, int G, int B, int A
asm : 8011BBA4, 0B22A4 : is_world_fog_enabled : bool : void
asm : 8011BBB4, 0B22B4 : get_world_fog_distance : void : int* out_start, int* out_end
asm : 8011BBD8, 0B22D8 : get_world_fog_color "each channel 0-255" : void : int* R, int* B, int* G, int* A
asm : 8011BC14, 0B2314 : set_tex_panner		: void : model* model, int pannerID
asm : 8011BC1C, 0B231C : set_main_pan_u		: void : int pannerID, int amount
asm : 8011BC34, 0B2334 : set_main_pan_v		: void : int pannerID, int amount
asm : 8011BC4C, 0B234C : set_aux_pan_u		: void : int pannerID, int amount
asm : 8011BC64, 0B2364 : set_aux_pan_v		: void : int pannerID, int amount

asm : 8011BE5C, 0B255C : set_background_color_blend : void : int R, int G, int B, int alpha "0-255 lerp amount"
asm : 8011BE80, 0B2580 : get_background_color_blend : void : int* out_R, int* out_G, int* out_B, int* out_alpha "0-255 lerp amount"

asm : 8011D910, 0B4010 : queue_render_task			: render_task_entry* : render_task* task

asm : 80120148, 0B6848 : play_model_animation	: ??? : ???

asm : 80122FEC, 0B96EC : enable_entity_fog : void : void
asm : 80123000, 0B9700 : disable_entity_fog : void : void
asm : 80123010, 0B9710 : set_entity_fog_dist : void : int min, int max
asm : 80123028, 0B9728 : set_entity_fog_color "each channel 0-255" : void : int R, int G, int B, int A
asm : 80123050, 0B9750 : is_entity_fog_enabled : bool : void
asm : 80123060, 0B9760 : get_entity_fog_distance : void : int* out_start, int* out_end
asm : 8012307C, 0B977C : get_entity_fog_color "each channel 0-255" : void : int* R, int* B, int* G, int* A

% start of file -->
asm : 80123660, 0B9D60 : clear_character_set : void : void
asm : 80123674, 0B9D74 : clear_printers : void : void
asm : 80123708, 0B9E08 : load_font_data : void : int start, int size, int dest
asm : 80123734, 0B9E34 : load_font	 : void : int font "0 = standard, 1/2 = credits"
asm : 801237D8, 0B9ED8 : update_messages : void : void
asm : 80123898, 0B9F98 : _update_message : void : print_context* printer
asm : 80124204, 0BA904 : render_messages : void : void

asm : 801256A4, 0BBDA4 : initialize_printer		: void : print_context*
asm : 80125804, 0BBF04 : dma_load_string			: void : int stringID, ptr dest
asm : 8012588C, 0BBF8C : load_message_to_buffer "load into standard message buffers at 80154430" : ptr buffer : int stringID
asm : 80125900, 0BC000 : load_string		: print_context* : stringID, int* "unk, writes zero to this"
asm : 8012591C, 0BC01C : _load_string		: print_context* : stringID, int* "unk, writes zero to this"
asm : 80125A68, 0BC168 : load_message_to_printer : int "always 1?" : stringID, print_context*
asm : 80125AB8, 0BC1B8 : clamp_printer_coords : void : print_context* printer, int X, int Y
asm : 80125B08, 0BC208 : cancel_message : void : print_context*
asm : 80125B2C, 0BC22C : set_message_images	: void : ptr images
asm : 80125B3C, 0BC23C : set_message_string	: void : int string, int index
asm : 80125BE8, 0BC2E8 : set_message_value	: void : int value, int index
asm : 80125C70, 0BC370 : close_message : void : print_context*

asm : 80125DF4, 0BC4F4 : get_char_width			: int width : ???
asm : 80125F68, 0BC668 : get_string_properties	: void : stringID, int* outHeight, int* outWidth, int*, int*, int*, int*, int charset
asm : 80126474, 0BCB74 : get_string_width		: int width : int stringID, int charset "0 = standard"
asm : 801264EC, 0BCBEC : draw_string			: void : int stringID "or address", int posX, int posY, int palette, int opacity, int style "0 = default"
asm : 8012769C, 0BDD9C : draw_number			: void : int value, int posX, int posY, bool, int palette, int opacity, int style "0 = default"
asm : 8012CC08, 0C3308 : _draw_message_box		: void : print_context*, short posX, short posY, short straightWidth, short curveWidth, short height, float scaleX, float scaleY, byte opacity
asm : 80130B0C, 0C720C : draw_coin_sparkles : void : item_entity* item
asm : 80130F58, 0C7658 : get_item_entity : item_entity* : int itemEntityIndex
asm : 80130FF0, 0C76F0 : clear_item_entity_data		: void : void
asm : 801310CC, 0C77CC : init_item_entity_list	: void : void
asm : 801313F4, 0C7AF4 : make_item_entity		: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, int pickupDelay "frames before available for pickup", int "facing angle sign? usually -1", var pickupVar
asm : 80131A94, 0C8194 : make_item_entity_nodelay	: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, var pickupVar
asm : 80131AC8, 0C81C8 : make_item_entity_delayed	: int itemEntityIndex : int itemID, float x, float y, float z, #itemSpawnMode, int pickupDelay "frames before available for pickup", var pickupVar
asm : 80131B00, 0C8200 : init_got_item				: int itemEntityIndex : int iconID, int, int messageFlags "0 = item, 10 = \"1 coin\", 20 = \"3 star pieces\", ..."
asm : 80131EEC, 0C85EC : update_item_entities : void : void
asm : 801321A4, 0C88A4 : appendGfx_item_entity : void : item_entity* item
asm : 80132C80, 0C9380 : draw_item_entities				: void : void
asm : 80132E54, 0C9554 : render_item_entities : void : void
asm : 801230B0, 0B97B0 : stub_item_entity_nodraw : void : void
asm : 80133930, 0CA030 : remove_item_entity_by_reference	: void : item_entity* item
asm : 801339FC, 0CA0FC : remove_item_entity_by_index		: void : int itemEntityIndex

asm : 80133B0C, 0CA20C : test_item_player_collision : bool colliding : item_entity* item
asm : 80134148, 0CA848 : set_item_entity_flags		: void : int itemEntityIndex, int flags
asm : 80134188, 0CA888 : clear_item_entity_flags	: void : int itemEntityIndex, int flags
asm : 8013420C, 0CA90C : set_item_entity_position	: void : int itemEntityIndex, float x, float y, float z
asm : 80134250, 0CA950 : update_item_entity_collectable	"coins, star points, etc" : void : item_entity* item % also handles pickup logic
asm : 80135658, 0CBD58 : update_item_entity_static "items sitting in the world" : void : item_entity* item % changes type to temp on pickup
asm : 801356DC, 0CBDDC : update_item_entity_temp "temporary items" : void : item_entity* item % also handles pickup and 'you got X!' logic
asm : 801382A0, 0CE9A0 : set_map_transition_effect		: void : int effect

asm : 80141300, 0D7A00 : init_menu_icon_list	: void : void
asm : 801414A4, 0D7BA4 : create_icon			: int iconIndex : int* iconScript
asm : 80141610, 0D7D10 : update_menu_icons			: void : void
asm : 80142BFC, 0D92FC : render_menu_icon			: void : menu_icon* icon
asm : 801436B4, 0D9DB4 : render_menu_icons			: void : void



asm : 80144298, 0DA998 : {warning:internal} draw_menu_icon					: void : int iconIndex, int mode
asm : 801447A8, 0DAEA8 : draw_icon_0				: void : int iconIndex % call _draw_icon with mode 0
asm : 801447C4, 0DAEC4 : draw_icon_1				: void : int iconIndex % call _draw_icon with mode 1
asm : 801447E0, 0DAEC4 : draw_icon_2				: void : int iconIndex % call _draw_icon with mode 2

asm : 80147368, 0DDA68 : play_ambient_sounds		: int scriptStatus : int soundID, int "flags?"
% <-- end of file

asm : 801447FC, 0DAEFC : set_menu_icon_script		: void : int iconIndex,  int* iconScript
asm : 801448B0, 0DAFB0 : get_menu_icon_script		: ptr : int iconIndex
asm : 801448D4, 0DAFD4 : get_menu_icon				: menu_icon* : int iconIndex
asm : 801448F4, 0DAFF4 : free_icon					: void : int iconIndex
asm : 80144984, 0DB084 : set_icon_render_pos		: void : int iconIndex, int posX, int posY
asm : 801449AC, 0DB0AC : get_icon_render_pos		: void : int iconIndex, int* posX, int* posY
asm : 80144A00, 0DB100 : set_icon_flags				: void : int iconIndex, int flagbits
asm : 80144A2C, 0DB12C : clear_icon_flags			: void : int iconIndex, int flagbits

% start of file -->
asm : 80145320, 0DBA20 : clear_saved_variables		: void : void	% clears all GameFlags/GameBytes/AreaFlags/AreaBytes
asm : 80145390, 0DBA90 : clear_area_flags			: void : void
asm : 801453E0, 0DBAE0 : clear_global_flag			: bool oldValue : int index "also accepts var reference"
asm : 80145450, 0DBB50 : set_global_flag			: bool oldValue : int index "also accepts var reference"
asm : 801454BC, 0DBBBC : get_global_flag			: bool value : int index "also accepts var reference"
asm : 80145520, 0DBC20 : set_global_byte			: int oldValue : int index, int value
asm : 80145538, 0DBC38 : get_global_byte			: int value : int index
asm : 8014554C, 0DBC4C : clear_area_flag			: bool oldValue : int index
asm : 801455A0, 0DBCA0 : set_area_flag				: bool oldValue : int index
asm : 801455F0, 0DBCF0 : get_area_flag				: bool value : int index
asm : 80145638, 0DBD38 : set_area_byte				: int oldValue : int index, int value
asm : 80145650, 0DBD50 : get_area_byte				: int value : int index
% <-- end of file

% start of file -->
asm : 80145670, 0DBD70 : default_trigger_function_handler : void : int*
asm : 80145680, 0DBD80 : clear_trigger_data		: void : void
asm : 80145728, 0DBE28 : init_trigger_list		: void : void
asm : 8014576C, 0DBE6C : create_trigger			: void : int*
asm : 80145860, 0DBF60 : update_triggers		: void : void
asm : 80145BF4, 0DC2F4 : delete_trigger			: void : trigger*
asm : 80145C6C, 0DC36C : is_trigger_bound		: bool : trigger* trigger, bytecode* script
asm : 80145CD0, 0DC3D0 : get_trigger_by_id		: trigger* : int triggerID
% asm : 80145CE8?
% <-- end of file

% start of file -->
asm : 80145D70, 0DC470 : load_map_bg			: void : char* assetName
asm : 80145E28, 0DC528 : read_background_size	: void : ptr backgroundAsset
asm : 80145E70, 0DC570 : set_background_size	: void : int startX, int startY, int sizeX, int sizeY
% 80147264 : UpdateMusicPlayers	: ??? : ???	% ?? no idea what this actually is

asm : 80149AB8, 0E01B8 : _play_sound			: void : int soundID, ???, ???, ???
asm : 80149C6C, 0E036C : stop_sound				: void : int soundID
asm : 80149CB4, 0E03B4 : play_sound				: void : int soundID
asm : 80149CD8, 0E03D8 : play_sound_at_player	: void : int soundID, int "always zero? straight from api func"
asm : 80149D08, 0E0408 : play_sound_at_npc		: void : int soundID, int "unk, usually 0", #npcID
asm : 80149D5C, 0E045C : play_sound_at_position : void : int soundID, int "unk, usually 0", float posX, float posY, float posZ

asm : 8014A430, 0E0B30 : get_default_variation_for_song "based on map" : int variation : int songID
asm : 8014A7E0, 0E0EE0 : _set_music_track : void : int musicPlayer, #songID, int variation, int unk, int volume
asm : 8014A918, 0E1018 : set_music_track : void : int musicPlayer, #songID, int variation, int unk, int volume
%}
% end at 801512B0

/%
	Overlay Memory:
	80200000 - 802C3000
%/

/%
RAM: 802C3000 - 802DA480
ROM:    E79B0 -    FEE30
%/
%{
% start of file -->
asm : 802C3000, 0E79B0 : sort_scripts 			: void : void
asm : 802C3148, 0E7AF8 : find_script_labels		: void : script_context* script
asm : 802C31DC, 0E7B8C : clear_script_list		: void : void
asm : 802C32EC, 0E7C9C : init_script_list		: void : void
asm : 802C33E0, 0E7D90 : start_script			: script_context* script : bytecode* script, int priority, int flags
asm : 802C35D0, 0E7F80 : start_script_in_group	: script_context* script : bytecode* script, int priority, int flags, int group
asm : 802C37C8, 0E8178 : start_child_script		: script_context* script : script_context* parent, bytecode* script, int flags
asm : 802C3D04, 0E86B4 : restart_script			: script_context* script : script_context* script
asm : 802C3D74, 0E8724 : update_scripts			: void : void
asm : 802C3F3C, 0E88EC : kill_script			: void : script_context* script
asm : 802C40AC, 0E8A5C : kill_script_by_ID		: void : int ID
asm : 802C4114, 0E8AC4 : kill_all_scripts		: void : void
asm : 802C4164, 0E8B14 : does_script_exist		: bool : int ID
asm : 802C41A4, 0E8B54 : does_script_exist_by_ref "unused" : bool : script_context* script
asm : 802C41D8, 0E8B88 : set_script_priority	: void : script_context* script, int priority
asm : 802C41E0, 0E8B90 : set_script_timescale	: void : script_context* script, float timescale
asm : 802C4200, 0E8BB0 : set_global_timespace	: void : float timescale
asm : 802C420C, 0E8BBC : get_global_timespace	: float timescale : void
asm : 802C4218, 0E8BC8 : set_script_group		: void : script_context* script, int groupFlags
% asm : 802C4220 : bind_trigger? : trigger* : bytecode* script, int flags, int triggerFlagIndex?, int triggerVar0, int triggerVar1, int priority, int scriptArg3
% asm : 802C42A8 : bind_trigger_1? : trigger * : bytecode *script, int flags, int triggerFlagIndex?, int triggerVar0, int triggerVar1, int priority
asm : 802C42D8, 0E8C88 : suspend_group_script "recursive for child/parents in matching group" : void : script_context* script, int groupFlags
asm : 802C437C, 0E8D2C : resume_group_script "recursive for child/parents in matching group" : void : script_context* script, int groupFlags
asm : 802C4420, 0E8DD0 : suspend_all_script "recursive for child/parents of script" : void : int scriptIndex
asm : 802C448C, 0E8E3C : resume_all_script "recursive for child/parents of script" : void : int scriptIndex
asm : 802C44F8, 0E8EA8 : suspend_group_script_index "recursive for child/parents in matching group" : void : int scriptIndex, int groupFlags
asm : 802C4570, 0E8F20 : resume_group_script_index "recursive for child/parents in matching group" : void : int scriptIndex, int groupFlags
asm : 802C45E8, 0E8F98 : suspend_all_group "affects all scripts in group" : void : int groupFlags
asm : 802C4648, 0E8FF8 : resume_all_group "affects all scripts in group" : void : int groupFlags
asm : 802C46A8, 0E9058 : suspend_group_others "suspend all other scripts matching group" : void : script_context* script, int groupFlags
asm : 802C471C, 0E90CC : resume_group_others "suspend all other scripts matching group" : void : script_context* script, int groupFlags
asm : 802C4790, 0E9140 : get_script_by_index	: script_context* script : int scriptIndex "index into script list"
asm : 802C47A8, 0E9158 : get_script_by_id		: script_context* script : int scriptID "unique ID"
asm : 802C47E8, 0E9198 : set_script_flags		: void : script_context* script, int flags
asm : 802C4880, 0E9230 : clear_script_flags		: void : script_context* script, int flags
% <-- end of file

% start of file -->
asm : 802C4920, 0E92D0 : fixed_var_to_float			: float : var fixed
asm : 802C496C, 0E931C : float_to_fixed_var			: var fixed : float
asm : 802C4998, 0E9348 : si_handle_return				: int : script_context* script
asm : 802C49B8, 0E9368 : si_handle_label				: int : script_context* script
asm : 802C49C0, 0E9370 : si_handle_goto					: int : script_context* script
asm : 802C4A00, 0E93B0 : si_handle_Loop					: int : script_context* script
asm : 802C4A48, 0E93F8 : si_handle_end_loop				: int : script_context* script
asm : 802C4B0C, 0E94BC : si_handle_break_loop			: int : script_context* script
asm : 802C4B5C, 0E950C : si_handle_wait					: int : script_context* script
asm : 802C4BB8, 0E9568 : si_handle_wait_seconds "just 30.0f * i + 0.5f" : int : script_context* script
asm : 802C4C40, 0E95F0 : si_handle_if_equal				: int : script_context* script
asm : 802C4CA0, 0E9650 : si_handle_if_not_equal			: int : script_context* script
asm : 802C4D00, 0E96B0 : si_handle_if_less				: int : script_context* script
asm : 802C4D64, 0E9714 : si_handle_if_greater			: int : script_context* script
asm : 802C4DC8, 0E9778 : si_handle_if_less_equal		: int : script_context* script
asm : 802C4E2C, 0E97DC : si_handle_if_greater_equal		: int : script_context* script
asm : 802C4E90, 0E9840 : si_handle_if_AND				: int : script_context* script % b is treated as a constant, doesnt go through GetVariable
asm : 802C4EE8, 0E9898 : si_handle_if_not_AND			: int : script_context* script
asm : 802C4F40, 0E98F0 : si_handle_else					: int : script_context* script
asm : 802C4F6C, 0E991C : si_handle_end_if				: int : script_context* script
asm : 802C4F74, 0E9924 : si_handle_switch				: int : script_context* script
asm : 802C4FE4, 0E9994 : si_handle_switch_const			: int : script_context* script
asm : 802C5030, 0E99E0 : si_handle_case_equal			: int : script_context* script
asm : 802C50BC, 0E9A6C : si_handle_case_not_equal		: int : script_context* script
asm : 802C5148, 0E9AF8 : si_handle_case_less			: int : script_context* script
asm : 802C51D8, 0E9B88 : si_handle_case_less_equal		: int : script_context* script
asm : 802C5268, 0E9C18 : si_handle_case_greater			: int : script_context* script
asm : 802C52F8, 0E9CA8 : si_handle_case_greater_equal	: int : script_context* script
asm : 802C5388, 0E9D38 : si_handle_case_range			: int : script_context* script
asm : 802C5444, 0E9DF4 : si_handle_case_default			: int : script_context* script
asm : 802C549C, 0E9E4C : si_handle_case_AND				: int : script_context* script
asm : 802C5518, 0E9EC8 : si_handle_case_equal_OR		: int : script_context* script
asm : 802C55B8, 0E9F68 : si_handle_case_equal_AND		: int : script_context* script
asm : 802C565C, 0EA00C : si_handle_end_case_group		: int : script_context* script
asm : 802C56D4, 0EA084 : si_handle_break_case			: int : script_context* script
asm : 802C5718, 0EA0C8 : si_handle_end_switch			: int : script_context* script
asm : 802C5744, 0EA0F4 : si_handle_set_var				: int : script_context* script
asm : 802C5790, 0EA140 : si_handle_set_const			: int : script_context* script
asm : 802C57B8, 0EA168 : si_handle_set_float			: int : script_context* script
asm : 802C5804, 0EA1B4 : si_handle_add					: int : script_context* script
asm : 802C5868, 0EA218 : si_handle_subtract				: int : script_context* script
asm : 802C58CC, 0EA27C : si_handle_multiply				: int : script_context* script
asm : 802C5934, 0EA2E4 : si_handle_divide				: int : script_context* script
asm : 802C59BC, 0EA36C : si_handle_mod					: int : script_context* script
asm : 802C5A84, 0EA434 : si_handle_addF					: int : script_context* script
asm : 802C5AEC, 0EA49C : si_handle_subtractF			: int : script_context* script
asm : 802C5B54, 0EA504 : si_handle_multiplyF			: int : script_context* script
asm : 802C5BC0, 0EA570 : si_handle_divideF				: int : script_context* script
asm : 802C5C28, 0EA5D8 : si_handle_set_int_buffer_ptr	: int : script_context* script
asm : 802C5C5C, 0EA60C : si_handle_set_float_buffer_ptr	: int : script_context* script
asm : 802C5C90, 0EA640 : si_handle_get_1_word			: int : script_context* script
asm : 802C5CC4, 0EA674 : si_handle_get_2_word			: int : script_context* script
asm : 802C5D2C, 0EA6DC : si_handle_get_3_word			: int : script_context* script
asm : 802C5DB4, 0EA764 : si_handle_get_4_word			: int : script_context* script
asm : 802C5E5C, 0EA80C : si_handle_get_Nth_word			: int : script_context* script
asm : 802C5EB4, 0EA864 : si_handle_get_1_float			: int : script_context* script
asm : 802C5F0C, 0EA8BC : si_handle_get_2_float			: int : script_context* script
asm : 802C5F9C, 0EA94C : si_handle_get_3_float			: int : script_context* script
asm : 802C605C, 0EAA0C : si_handle_get_4_float			: int : script_context* script
asm : 802C614C, 0EAAFC : si_handle_get_Nth_float		: int : script_context* script
asm : 802C61AC, 0EAB5C : si_handle_set_array			: int : script_context* script
asm : 802C61E0, 0EAB90 : si_handle_set_flag_array		: int : script_context* script
asm : 802C6214, 0EABC4 : si_handle_allocate_array		: int : script_context* script
asm : 802C6270, 0EAC20 : si_handle_AND					: int : script_context* script
asm : 802C62D4, 0EAC84 : si_handle_AND_const			: int : script_context* script
asm : 802C632C, 0EACDC : si_handle_OR					: int : script_context* script
asm : 802C6390, 0EAD40 : si_handle_OR_const				: int : script_context* script
asm : 802C63E8, 0EAD98 : si_handle_call					: int : script_context* script
asm : 802C646C, 0EAE1C : si_handle_exec1				: int : script_context* script % creates a script, sharing the same group and priority, and sets owner to the caller script. variables and flags are copied from caller to callee. variables and flags are copied, array and flagArray pointers are shared!
asm : 802C6524, 0EAED4 : si_handle_exec2				: int : script_context* script % creates a script, sharing the same group and priority, and sets owner to the caller script. variables and flags are copied from caller to callee.
asm : 802C65FC, 0EAFAC : si_handle_exec_wait			: int : script_context* script % creates a 'child' script, sharing the same group and priority, and sets owner to the caller script's owner. blocks the caller. variables and flags are copied from caller to callee.
asm : 802C6640, 0EAFF0 : si_handle_jump					: int : script_context* script
asm : 802C667C, 0EB02C : _bound_script_trigger_handler	: bool : trigger*
asm : 802C6714, 0EB0C4 : si_handle_bind					: int : script_context* script
api : 802C6824, 0EB1D4 : DeleteTrigger					: void : int triggerIndex
asm : 802C6850, 0EB200 : si_handle_unbind				: int : script_context* script
asm : 802C6870, 0EB220 : si_handle_kill					: int : script_context* script
asm : 802C689C, 0EB24C : si_handle_set_priority			: int : script_context* script
asm : 802C68D8, 0EB288 : si_handle_set_timescale		: int : script_context* script
asm : 802C6914, 0EB2C4 : si_handle_set_group			: int : script_context* script
asm : 802C6950, 0EB300 : si_handle_suspend_all			: int : script_context* script
asm : 802C697C, 0EB32C : si_handle_resume_all			: int : script_context* script
asm : 802C69A8, 0EB358 : si_handle_suspend_others		: int : script_context* script
asm : 802C69E4, 0EB394 : si_handle_resume_others		: int : script_context* script
asm : 802C6A20, 0EB3D0 : si_handle_suspend				: int : script_context* script
asm : 802C6A4C, 0EB3FC : si_handle_resume				: int : script_context* script
asm : 802C6A78, 0EB428 : si_handle_does_script_exist	: int : script_context* script
asm : 802C6B54, 0EB504 : si_handle_bind_lock			: int : script_context* script
asm : 802C6C78, 0EB628 : si_handle_thread				: int : script_context* script
asm : 802C6D4C, 0EB6FC : si_handle_end_thread			: int : script_context* script
asm : 802C6D6C, 0EB71C : si_handle_child_thread			: int : script_context* script
asm : 802C6DF4, 0EB7A4 : si_handle_end_child_thread		: int : script_context* script
asm : 802C6E1C, 0EB7CC : si_handle_print_debug_var		: int : script_context* script
asm : 802C7404, 0EBDB4 : si_execute_next_command		: int : script_context* script
asm : 802C7A54, 0EC404 : si_handle_end					: int : script_context* script
asm : 802C7ABC, 0EC46C : get_variable					: int value : script_context* script, var source
asm : 802C7DA8, 0EC758 : get_variable_index				: int index : script_context* script, var source
asm : 802C7F20, 0EC8D0 : get_variable_index_alt			: int index : script_context* script, var % identical to previous function, unused, purpose unknown.
asm : 802C8098, 0ECA48 : set_variable					: int newValue : script_context* script, var dest, int value "fixed values will be converted, others will not be"
asm : 802C842C, 0ECDDC : get_float_variable 			: float value : script_context* script, var source
asm : 802C8640, 0ECFF0 : set_float_variable 			: float newValue : script_context* script, var dest, float value 
asm : 802C8890, 0ED240 : si_goto_label					: int : script_context* script
asm : 802C88FC, 0ED2AC : si_skip_if						: int : script_context* script
asm : 802C8978, 0ED328 : si_skip_else					: int : script_context* script
asm : 802C89E4, 0ED394 : si_goto_end_case				: int : script_context* script
asm : 802C8A60, 0ED410 : si_goto_next_case				: int : script_context* script
asm : 802C8AE4, 0ED494 : si_goto_end_loop				: int : script_context* script

api : 802C8B60, 0ED510 : TranslateModel   : void : modelID, float dX, float dY, float dZ
api : 802C8C64, 0ED614 : RotateModel      : void : modelID, float angle, float rX, float rY, float rZ
api : 802C8D88, 0ED738 : ScaleModel       : void : modelID, float sX, float sY, float sZ
api : 802C8F28, 0ED8D8 : CloneModel       : void : modelID, int newModelID
api : 802C8E8C, 0ED83C : GetModelIndex    : void : modelID, {out} var index
api : 802C8F80, 0ED930 : GetModelCenter   : Var[0] int posX, Var[1] int posX, Var[2] int posX : modelID
api : 802C9000, 0ED9B0 : SetTexPanner "sets a model's pannerID and sets the texture pan flag" : void : modelID, int panID
api : 802C907C, 0EDA2C : SetModelFlag10   : void : modelID, bool   % ??? ***

api : 802C9208, 0EDBB8 : EnableTexPanning : void : modelID, bool "0 = disabled, 1 = enabled"
api : 802C9288, 0EDC38 : EnableModel      : void : modelID, bool "0 = disabled, 1 = enabled"
api : 802C9308, 0EDCB8 : SetGroupEnabled  : void : modelID, int mode "0 = disabled, 1 = enabled, 2 = all others disabled, 3 = all others enabled"
api : 802C9364, 0EDD14 : SetTexPanOffset  : void : int panID, int tile "0 = main | 1 = aux", int offsetU, int offsetV

api : 802C9518, 0EDEC8 : SetModelFlags	: void : modelID, int, bool          % args : modelID, flags, 1 "set" | 0 "clear"
% 802C971C : ??? :  modelID % args: groupID -- somehow modifies the way the group is rendered, making it all additive? used in jan_04 for the water, isk_07 for a door
api : 802C97B4, 0EE164 : TranslateGroup   : void : modelID, float dX, float dY, float dZ
api : 802C98D8, 0EE288 : RotateGroup      : void : modelID, float angle, float rX, float rY, float rZ
api : 802C9A1C, 0EE3CC : ScaleGroup       : void : modelID, float sX, float sY, float sZ
api : 802C9B98, 0EE548 : EnableGroup      : void : modelID, bool enable
asm : 802C9CE8, 0EE698 : modify_collider_family_flags "set flags for collider + siblings + children" : void : colliderID, int flags, int mode "0 = set bits, 1 = clear bits, 2 = replace, 3 = replace lowest 16 bits"
api : 802C9DCC, 0EE77C : ModifyColliderFlags	: void : int mode "0 = set bits, 1 = clear bits, 2 = replace, 3 = replace lowest 16 bits", colliderID, int flags
% api : 802C9ED8 : ResetFromLava			: void : $LavaResetList
% api : 802C9FD4
api : 802CA0AC, 0EEA5C : GetColliderCenter		: Var[0] int posX, Var[1] int posY, Var[2] int posZ : colliderID
api : 802CA114, 0EEAC4 : ParentColliderToModel "associates a model with a collider and applies the model's transformation" : void :  colliderID, modelID
api : 802CA188, 0EEB38 : UpdateColliderTransform "applies transformation from parent model" : void : colliderID
asm : 802CA1B8, 0EEB68 : set_zone_enabled "operates recursively" : void : int zoneID, bool enabled
api : 802CA254, 0EEC04 : SetZoneEnabled "operates recursively" : void : zoneID, bool enabled
asm : 802CA304, 0EECB4 : goto_map				: void : script_context* script, int mode
api : 802CA400, 0EEDB0 : GotoMap				: void : $ASCII mapName {print}, int entryID
api : 802CA420, 0EEDD0 : GotoMapSpecial			: void : $ASCII mapName {print}, int entryID, int transitionType "fade to white/black, star wipe, mario head cutout, curtain close, etc"
api : 802CA440, 0EEDF0 : GotoMapByID			: void : int areaID, int mapID, int	entryID
api : 802CA460, 0EEE10 : GetEntryID				: void : {out} var outValue	{outType=entryID} % returns the entrance ID that the player used to enter the current map
api : 802CA490, 0EEE40 : GetMapID				: void : int outValue	% used by the forever forest maps "mim_*" to load current ID to a game byte
api : 802CA4C0, 0EEE70 : GetLoadType			: void : int outType "0 = loaded from another map | 1 = loaded from main menu" % used for spawning the player at save points
api : 802CA4F4, 0EEEA4 : SetRenderMode			: void : modelID model, int mode
api : 802CA558, 0EEF08 : PlaySoundAtModel		: void : modelID, #soundID, ??? "always zero?"
api : 802CA614, 0EEFC4 : PlaySoundAtCollider	: void : colliderID, #soundID, ??? "always zero?"
% <-- end of file


% CAMERA FUNCTIONS
api : 802CA6C0, 0EF070 : SetCamEnabled    : void : #camID, bool enabled
api : 802CA774, 0EF124 : SetCamFlag80     : void : #camID, bool enabled
api : 802CA828, 0EF1D8 : SetCamPerspective : void : #camID, int type "almost always = 3, NOT the same camera type from zones", int vfov, int nearClip, int farClip
% 802CA988	#camID, out, out, out, out
api : 802CAB18, 0EF4C8 : SetCamViewport   : void : #camID, int startX, int startY, int width, int height
% 802CABE8  8    
api : 802CAD98, 0EF748 : SetCamBGColor    : void : #camID, int R "0-255", int G "0-255", int B "0-255" % this is almost always black "0,0,0". only ice palace is different.

api : 802CAF2C, 0EF8DC : SetCamTarget "set the target position" : void : #camID, float posX, float posY, float posZ
% 802CB008  9     
api : 802CB2A8, 0EFC58 : ShakeCam		: void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration, int magnitude
asm : 802CB56C, 0EFF1C : exec_ShakeCam1 : void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration
asm : 802CB5C8, 0EFF78 : exec_ShakeCamX : void : #camID, int mode "0 = constant up&down | 1 = angular | 2 = decaying up&down", int duration, int magnitude
api : 802CB680, 0F0030 : SetCamLeadPlayer : void : #camID, bool enabled
%
api : 802CB79C, 0F014C : PanToTarget "pans the camera with a cosine easing function at the ends" : void : #camID, float easingPhase, int targetType "1 = target | 0 = player"
api : 802CB860, 0F0210 : UseSettingsFrom "use control settings from the zone below a given sampling point" : void : #camID, float posX, float posY, float posZ
api : 802CB9F8, 0F03A8 : LoadSettings : void : #camID, $CamSettings
api : 802CBAB4, 0F0464 : SetCamType : void : #camID, int controlType, bool
api : 802CBB48, 0F04F8 : SetCamPitch : void : #camID, float boomPitch, float viewPitch
api : 802CBBE4, 0F0594 : SetCamDistance : void : #camID, float boomLength
api : 802CBC58, 0F0608 : SetCamPosA : void : #camID, float x, float y
api : 802CBCF4, 0F06A4 : SetCamPosB : void : #camID, float x, float y
api : 802CBD90, 0F0740 : SetCamPosC : void : #camID, float x, float y
api : 802CBE2C, 0F07DC : SetPanTarget : void : #camID, float x, float y, float z
api : 802CBEF0, 0F08A0 : SetCamSpeed : void : #camID, float speed
api : 802CBF64, 0F0914 : GetCamType : void : #camID, {out} var type, {out} var "unkBool"
api : 802CBFF4, 0F09A4 : GetCamPitch : void : #camID, {out} fvar boomPitch, {out} fvar viewPitch
api : 802CC084, 0F0A34 : GetCamDistance   : void : #camID, {out} fvar boomLength
api : 802CC0F4, 0F0AA4 : GetCamPosA       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC184, 0F0B34 : GetCamPosB       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC214, 0F0BC4 : GetCamPosC       : void : #camID, {out} fvar x, {out} fvar z
api : 802CC2A4, 0F0C54 : GetCamPosition   : void : #camID, {out} fvar x, {out} fvar y, {out} fvar z
api : 802CC354, 0F0D04 : WaitForCam "checks if the camera has completed its assigned motion yet" : void : #camID, float endInterpValue "almost always .FLOAT[1.0]"
api : 802CC3EC, 0F0D9C : SetCamProperties : void : #camID, float moveSpeed, float x, float y, float z, float boomLength, float boomPitch, float viewPitch
api : 802CC660, 0F1010 : AdjustCam "targets the player and adjusts camera settings" : void : #camID, float moveSpeed, float offsetX, float boomLength, float boomPitch, float viewPitch
api : 802CC8C8, 0F1278 : ResetCam "copies settings from the player's zone and pans to the player at a given speed" : void : #camID, float moveSpeed

% These functions are responsible for complex model animations in maps like dgb_01 and kmr_11:

% asm : 802CCB18 : draw_anim_models		: void : void
% api : 802CCFE4 : SetAnimModelPosition : void : int index, float x, float y, float z
% api : 802CD090 : GetAnimModelPosition : void : int index, {out} fvar posX, {out} fvar posY, {out} fvar posZ
% api : 802CD12C : AddAnimModelPosition : void : int index, float Dx, float Dy, float Dz
% api : 802CD1F0 : SetAnimModelRotation : void : int index, float Rx, float Ry, float Rz
% api : 802CD29C : SetAnimModelScale : void : int index, float Sx, float Sy, float Sz
api : 802CCCEC, 0F169C : LoadModelAnimation : void : int, int "$ModelAnimation"
api : 802CCE6C, 0F181C : PlayModelAnimation "plays model animation, forcing restart if same as current one" : void : int, $Unknown % format not reverse-engineered
api : 802CCF6C, 0F191C : ChangeModelAnimation "plays model animation only if it differs from current one" : void : int, $Unknown % format not reverse-engineered

% Used only in General Guy fight to align General Guy actor with placeholder model in the Toy Tank model:
% 802CD5C0 some sort of GetModelPosition " ???, modelID, *out X, *out Y, *out Z"
% 802CD6E0 some sort of GetModelRotation " ???, modelID, *out Rx, *out Rx, *out Rz"

asm : 802CDB0C, 0F24BC : set_npc_animation	: void : npc*, animID
api : 802CDC1C, 0F25CC : DeleteNpc 			: void : #npcID
api : 802CDC58, 0F2608 : GetNpcPointer 		: void : #npcID, {out} var npc
api : 802CDCB0, 0F2660 : SetNpcPos        	: void : #npcID, int x, int y, int z
api : 802CDDB0, 0F2760 : SetNpcRotation "center of rotation is at base of sprite" : void : #npcID, float rX, float rY, float rZ
% api : 802CDE68 sets npc[50]
api : 802CDED4, 0F2884 : SetNpcScale		: void : #npcID, float sX, float sY, float sZ
api : 802CDF8C, 0F293C : SetNpcCollisionSize : void : #npcID, int height, int radius
api : 802CE01C, 0F29CC : SetNpcSpeed		: void : #npcID, float speed
api : 802CE088, 0F2A38 : SetNpcJumpscale  	: void : #npcID, float jumpScale
api : 802CE0F4, 0F2AA4 : SetNpcAnimation 	: void : #npcID, int animation
api : 802CE160, 0F2B10 : GetNpcAnimation	: void : #npcID, {out} var animation
% api : 802CE160 sets npc[30]
api : 802CE22C, 0F2BDC : NpcMoveTo			: void : #npcID, int goalX, int goalZ, int time "frames; 0 = use NpcSpeed"
asm : 802CE434, 0F2DE4 : _npc_jump_to		: int scriptStatus : script_context*, int initialCall, int snapYaw
api : 802CE6C4, 0F3074 : NpcJump0 "snaps yaw to move direction" : void : #npcID, int goalX, int goalY, int goalZ, int duration
api : 802CE6E0, 0F3090 : NpcJump1 "does not change yaw" : void : #npcID, int goalX, int goalY, int goalZ, int duration
api : 802CE6FC, 0F30AC : NpcFlyTo			: Var[3] float posX, Var[4] float posY, Var[5] float posZ, Var[6] int duration : #npcID, int goalX, int goalY, int goalZ, int duration, int arcHeight "offset height over fly length by a sinusoidal arc, use 0 for none, can be negative", #easing "same as for lerps"
api : 802CEA10, 0F33C0 : GetNpcYaw			: void : #npcID, {out} var yaw
api : 802CEA84, 0F3434 : SetNpcYaw			: void : #npcID, int angle
api : 802CEB04, 0F34B4 : InterpNpcYaw "turns gradually over some number of frames. however, turn animation will often be abrupt." : void : #npcID, int goalAngle, int time "frames"
api : 802CECC8, 0F3678 : NpcFacePlayer      : void : #npcID, int duration "0 = instant"
api : 802CEE80, 0F3830 : NpcFaceNpc			: void : #npcID, #npcID "cannot be player", int duration "0 = instant"
api : 802CF060, 0F3A10 : SetNpcFlagBits		: void : #npcID, int flags, bool mode "1 = set | 0 = clear"
api : 802CF0F4, 0F3AA4 : GetNpcPos			: void : #npcID, {out} var posX, {out} var posY, {out} var posZ
% api : 802CF1B4 sets npc[80]
% api : 802CF208 "43" -- also sets animations, difference between this and 802CE0F4 is not clear
api : 802CF268, 0F3C18 : EnableNpcShadow      : void : #npcID, bool enabled
api : 802CF2EC, 0F3C9C : EnableNpcBlur        : void : #npcID, bool enabled
api : 802CF370, 0F3D20 : ClearPartnerMoveHistory : void : #npcID
% api : 802CF3BC : NpcSetHomePosToCurrent

api : 802CF438, 0F3DE8 : GetPartnerPos	: void : {out} var posX, {out} var posY, {out} var posZ 
api : 802CF4E8, 0F3E98 : DisablePartnerAI : void : int         % ??? -- partner will no longer try to follow mario, still has physics though
api : 802CF52C, 0F3EDC : EnablePartnerAI  : void : void       % enables follow player AI

api : 802CF5B8, 0F3F68 : BringPartnerOut	: void : #partnerID % brings out temporary extra partner, Npc:Partner will refer to this temporary partner until they are put away
api : 802CF988, 0F4338 : PutPartnerAway		: void : void % puts away a temporary partner

api : 802CFC74, 0F4624 : GetCurrentPartnerID : void : {out} var partnerID {outType=#partnerID}
api : 802CFCE8, 0F4698 : IsCurrentPartnerFlying : void : {out} var isFlying {outType=bool}

api : 802D0118, 0F4AC8 : SetNpcEffect		: void : #npcID, ???, ???
api : 802D01AC, 0F4B5C : PlaySoundAtNpc		: void : #npcID, #soundID, ???
% api : 802D0244 : ??? : void : #npcID, int value --> npc[AA]
% <-- end of file

% start of file -->
% formerly SayMessage0
api : 802D02B0, 0F4C60 : SpeakToPlayer : Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
% formerly SayMessage1
api : 802D02CC, 0F4C7C : EndSpeech		: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY
% formerly SayMessage2 -- pair with strings starting with [NEXT] rather than [BEGIN:XX]
api : 802D02E8, 0F4C98 : ContinueSpeech	: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int messageFlags, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
% formerly SayMessage3
api : 802D0304, 0F4CB4 : SpeakToNpc		: Var[D] animID savedAnim1, Var[E] animID savedAnim2, Var[F] int yaw ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, #npcID, {print} stringID ...
	: #npcID, animID talkAnim, animID idleAnim, int flags, #npcID, int screenPosOffsetX, int screenPosOffsetY, {print} stringID
asm : 802D0320, 0F4CD0 : _show_message "reads args from script context" : void : script_context*, bool initialCall, int mode "from SayMessageX api functions"
api : 802D0894, 0F5244 : ShowMessageAtScreenPos "used by signs and NPCs that cannot be seen, speech bubble doesn't connect to anything" : Var[0] int ??? : {print} stringID, int screenPosX, int screenPosY
api : 802D095C, 0F530C : ShowMessageAtWorldPos : void : {print} stringID, int posX, int posY, int posZ
api : 802D0A98, 0F5448 : CloseMessage "force the current message box to close" : Var[0] int ??? : void
api : 802D0AFC, 0F54AC : SwitchMessage "change the string used for the current message box" : Var[0] int ??? : {print} stringID
api : 802D0B6C, 0F551C : ShowChoice "display a choice message and wait for selection" : Var[0] int selectedIndex : {print} stringID options
api : 802D0BF8, 0F55A8 : CloseChoice			: void : void
api : 802D0C20, 0F55D0 : CancelMessage "close current message box? uses different flag than CloseMessage" : void : void
api : 802D0C48, 0F55F8 : CancelMessageAndBlock "close current message box? uses different flag than CloseMessage" : void : void
api : 802D0C70, 0F5620 : SetMessageImages		: void : int messageImageList
% api : 802D0C94
api : 802D0CEC, 0F569C : SetMessageString		: void : stringID "or pointer to string", int messageVarIndex "0-3"
api : 802D0D44, 0F56F4 : SetMessageValue		: void : int value, int messageVarIndex "0-3"
% <-- end of file

% start of file -->
api : 802D0DA0, 0F5750 : HidePlayerShadow		: void : bool hideShadow "1 = hide | 0 = reveal"
api : 802D0DE4, 0F5794 : DisablePlayerPhysics "disables gravity, animation state machine changes, camera controller updates, but NOT partner AI" : void : bool disable "1 = disable | 0 = enable"
api : 802D0E28, 0F57D8 : DisablePlayerInput  	: void : bool disable "1 = disable | 0 = enable"
api : 802D0EF0, 0F58A0 : SetPlayerPos        	: void : int X, int Y, int Z
api : 802D0FB0, 0F5960 : SetPlayerCollisionSize : void : int height, int radius
api : 802D1024, 0F59D4 : SetPlayerSpeed      	: void : float speed
api : 802D1054, 0F5A04 : SetPlayerJumpscale		: void : float jumpScale
api : 802D1084, 0F5A34 : SetPlayerAnimation  	: void : #playerAnim
api : 802D10D8, 0F5A88 : SetPlayerActionState	: void : #actionStateID
% api : 802D1104 : set npc[30] for player
api : 802D1134, 0F5AE4 : PlayerMoveTo			: void : int goalX, int goalZ, int time "frames -- use 0 to compute via move speed + distance"
asm : 802D14E0, 0F5E90 : player_jump			: bool : script_context* script, int initialCall, int mode
api : 802D18E8, 0F6298 : PlayerJump				: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D1904, 0F62B4 : PlayerJump1			: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D1920, 0F62D0 : PlayerJump2			: void : int goalX, int goalY, int goalZ, int arcHeight
api : 802D193C, 0F62EC : InterpPlayerYaw		: void : int targetAngle, int time "frames"
api : 802D1B04, 0F64B4 : PlayerFaceNpc "set player yaw to face npc" : void : #npcID facingTarget, int "1 allows looking back and forth between targets, 0 = fixed?"
api : 802D1D28, 0F66D8 : GetPlayerTargetYaw		: void : {out} var yaw
api : 802D1D60, 0F6710 : SetPlayerFlagBits		: void : int bits, bool mode "1 = set | 0 = clear"
api : 802D1DD0, 0F6780 : GetPlayerActionState	: void : {out} var state {outType=#actionStateID}
api : 802D1DFC, 0F67AC : GetPlayerPos			: void : {out} var posX, {out} var posY, {out} var posZ
api : 802D1E94, 0F6844 : GetPlayerAnimation		: void : {out} var animation {outType=#playerAnim}
api : 802D1EC0, 0F6870 : FullyRestoreHPandFP	: void : void
api : 802D1EE0, 0F6890 : FullyRestoreSP			: void : void
api : 802D1EFC, 0F68AC : EnablePartner			: void : int partner "note: partnerID - 1"
api : 802D1F38, 0F68E8 : DisablePartner			: void : #partnerID
api : 802D1F70, 0F6920 : UseEntryHeading : Var[1] float goalPosX, Var[2] float goalPosY, Var[3] float goalPosZ, Var[5] float offsetStep "tangent from room entry offset" : int moveDist, int time "num frames"
%asm : 802D2148
api : 802D216C, 0F6B1C : UseExitHeading : Var[1] float goalPosX, Var[2] float goalPosY, Var[3] float goalPosZ : int moveDist, entryID "exit angle = opposite of entry angle"

api : 802D2AA8, 0F7458 : DisablePulseStone "controls flag that make pulse stone appear on sbk maps" : void : bool disabled
api : 802D2B0C, 0F74BC : GetCurrentPartner : void : {out} var value
% two functions controlling flags 4 and 8
api : 802D2B88, 0F7538 : Disable8bitMario : void : bool disabled "0 = pixel mario | 1 = paper mario"
api : 802D2CD8, 0F7688 : PlaySoundAtPlayer : void : #soundID, int "always zero?"


/%  
    No idea what to call these functions. The 'ImageObj' they operate
    on is used for projectiles in item scripts. They could have far
    broader applications though.
    
    802D3474 -- CreateImageObj  " out handle, $ImageData " creates an icon"?" object
    802D3624 -- RemoveImageObj  " handle "
    802D36E0 -- SetObjPosition  " handle, x, y, z "
    802D3840 -- SetObjRotation  " handle, rx, ry, rz "
    802D38EC -- SetObjScale     " handle, sx, sy, sz "
    802D39FC -- SetObjJumpScale " handle, *FLOAT jumpscale "
    802D3C58 -- JumpObj         " handle, x, y, z, h "
%/

api : 802D45B0, 0F8F60 : MakeLerp "uses Vars B-F" : void : int start, int end, int duration "frames", #easing
api : 802D462C, 0F8FDC : UpdateLerp "uses Vars B-F" : Var[0] int currentValue, Var[1] bool done : void
api : 802D46B0, 0F9060 : RandInt : void : int max, {out} var value
api : 802D4708, 0F90B8 : GetAngleBetweenNPCs : void :#npcID, #npcID, {out} var angle
api : 802D47B4, 0F9164 : GetAngleToNPC : void : #npcID, {out} var angle "from player toward NPC"
api : 802D4830, 0F91E0 : GetAngleToPlayer : void : #npcID, {out} var angle "from NPC toward player"
api : 802D48AC, 0F925C : AwaitPlayerApproach "pauses the script until the player comes within a certain radius from point X,Z" : void : int X, int Z, int radius
api : 802D4964, 0F9314 : IsPlayerWithin "checks whether the player is within a certain radius of point X,Z" : void : int X, int Z, int radius, {out} var bIsWithin
api : 802D4A5C, 0F940C : AwaitPlayerLeave "pauses the script until the player moves beyond a certain radius from point X,Z" : void : int X, int Z, int radius
api : 802D4B14, 0F94C4 : AddVectorPolar "offsets a point X,Z by a vector given by length and angle" : void : {out} fvar X, {out} fvar Z, float radius, float angle

api : 802D5430, 0F9DE0 : LoadPath : Var[F] int pathObjectHandler "expected by GetNextPathPos" : int time, {len=#2} $VectorList, int numVectors, #easing
asm : 802D4DAC, 0F975C : setup_path_data : void : int num, float*, float* staticVectors, float* outVectors
api : 802D5524, 0F9ED4 : GetNextPathPos : Var[0] int done, Var[1] float posX, Var[2] float posY, Var[3] float posZ, Var[F] int pathObjectHanlder "created by LoadPath, must be maintained between calls" : none % no args

api : 802D5770, 0FA120 : GetDist2D : void : {out} fvar dist, float X1, float Y1, float X2, float Y2

/%
    These two functions assume arg0 is a variable that holds another variable.'
    For example, consider the result of "Set  *Var[0]  *StoryProgress"
    We can use these functions to get/set *StoryProgress through *Var[0].
%/
api : 802D58E0, 0FA290 : SetValueByRef "sets the variable stored at src to the value at dest" : void : {out} var dest, var src % 
% X = GetVar"src", Y = GetVar"dest", SetVar"X, Y" -- *dest = *src
api : 802D593C, 0FA2EC : GetValueByRef "gets the value held by the variable in src and copies it to dest" : void : var src, {out} var dest
% val = GetVar"GetVar"src"", SetVar"dest, val" -- *dest = **src
api : 802D5998, 0FA348 : EnableStatusMenu "multiple calls stack and must be undone individually" : void : bool enabled	"1 = enable | 0 = disable"
api : 802D59DC, 0FA38C : ShowStatusMenu	: void : bool "1 = force it to show | 0 = force it to hide"
api : 802D5A28, 0FA3D8 : SetGameMode : void : int
api : 802D5A58, 0FA408 : ClampAngleInt : void : int "clamps to range 0-360"
api : 802D5AB4, 0FA464 : ClampAngleFloat : void : float "clamps to range 0-360"

api : 802D5CE0, 0FA690 : FadeOutMusic     	: void : int musicPlayer, int fadeTime "max 10000"
api : 802D5D4C, 0FA6FC : SetMusicTrack 		: void : int musicPlayer, #songID, int variation, int volume
api : 802D5DF4, 0FA7A4 : FadeInMusic      	: void : int musicPlayer, #songID, int variation, int fadeTime, ???, ???
%802D5EE0
%802D5F28

api : 802D60E8, 0FAA98 : ClearAmbientSounds	: void : int fadeTime "typical value is 250"
api : 802D611C, 0FAACC : PlayAmbientSounds	: void : #ambientSFX
api : 802D6150, 0FAB00 : PlaySound        	: void : int soundID
api : 802D61DC, 0FAB8C : PlaySoundAt      	: void : int soundID, ???, int X, int Y, int Z
api : 802D62B8, 0FAC68 : StopSound			: void : int soundID
api : 802D6314, 0FACC4 : UseDoorSounds    	: void : #doorSFX
api : 802D636C, 0FAD1C : PlaySoundAtF		: void : int soundID, ???, float X, float Y, float Z

% deal with inventory
api : 802D6858, 0FB208 : RemoveKeyItemAt "removes key item at index" : void : int keyItemSlot
api : 802D688C, 0FB23C : RemoveItemAt     	: void : int itemSlot
api : 802D68C8, 0FB278 : AddKeyItem       	: void : #itemID
% api : 802D6954 : ???
api : 802D699C, 0FB34C : HasKeyItem       	: void : #itemID, {out} var bHasItem "boolean"
api : 802D6A14, 0FB3C4 : FindKeyItem      	: void : #itemID, {out} var keyItemSlot "FFFF if not found"
api : 802D6A98, 0FB448 : AddItem          	: void : #itemID, {out} var itemSlot "FFFF if none were available"
% api : 802D6AF0 : one out arg -- always returns zero
api : 802D6B18, 0FB4C8 : FindItem         	: void : #itemID, {out} var itemSlot "FFFF if not found"
api : 802D6B9C, 0FB54C : RemoveItem       	: void : #itemID, {out} var itemSlot "FFFF if none were removed"
api : 802D6C4C, 0FB5FC : CountFortessKeys	: void : {out} var num
api : 802D6C94, 0FB644 : RemoveFortressKeys	: void : int num
api : 802D6CC0, 0FB670 : MakeItemEntity : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
% This is almost identical to MakeItemEntity, but this is used for items that drop from trees.
% The only difference between these functions is that MakeItemEntity uses GetVariableIndex on the saved flag value, while DropItem uses GetVariable
api : 802D6DC0, 0FB770 : DropItemEntity : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
% Same as DropItemEntity, except it also sets item flag 0x4000
api : 802D6EC0, 0FB870 : DropItemEntityB : Var[0] int itemEntityIndex : #itemID, int spawnX, int spawnY, int spawnZ, #itemSpawnMode, var pickupFlag "GameFlag, 0 is valid for none"
api : 802D6FCC, 0FB97C : RemoveItemEntity : void : int itemEntityIndex
api : 802D6FF8, 0FB9A8 : AddBadge         : void : #itemID, {out} var addedBadgeSlot
api : 802D7050, 0FBA00 : RemoveBadge "unequips and removes badge from inventory" : void : #itemID
api : 802D70D0, 0FBA80 : SetItemPos     : void : int itemEntityIndex, int X, int Y, int Z
api : 802D7194, 0FBB44 : SetItemFlags 	: void : int itemEntityIndex, int flags, int mode

api : 802D7278, 0FBC28 : AddCoin		: Var[0] int numCoins : int deltaCoins "can be negative"
api : 802D72B4, 0FBC64 : AddStarPoints	: Var[0] int numStarPoints : int deltaStarPoints "can be negative"
api : 802D72F0, 0FBCA0 : AddStarPieces  : Var[0] int numStarPieces : int deltaStarPieces "can be negative"
api : 802D732C, 0FBCDC : GetItemPower   : void : #itemID, int bonusHP, int bonusFP
api : 802D73A4, 0FBD54 : ShowGotItem    : void : #itemID, bool, int messageBoxFlags "0 = item, 10 = \"1 coin\", 20 = \"3 star pieces\", ..."

api : 802D78A0, 0FC250 : ShowEmote        : void : #npcID, #emote, int, ???, ???, ???, ???, ???, ???     % args : #npcID, emoteType, angle "degrees ccw from 12:00", ???, flag?, ?, ?, ?

api : 802D8028, 0FC9D8 : ShowSleepBubble  : void : #npcID, int ???, float ???, int ??? "X?", float ??? "Y?", float ??? "Z?", float ??? "scale?", float pitch "0 = up, >0 = left", {out} var effectPtr {outType=effect*}

api : 802D7AE4, 0FC494 : RemoveEffect     : void : effect*

% 802D7CF8 can be used to darken the screen "ie, Rafael raven scene in jan_23"

% 802D8248 "nargs = 2"

api : 802D829C, 0FCC4C : PlayEffect "huge switch table for playing special effects" : Var[F] effect* effect : varargs

% Effect Arg Examples:
% 0000005E : lightning -- 0, casterX, casterY, casterZ, targetX, targetY, targetZ, size, ???, 0, 0, 0, 0
% 00000038 : pink particles -- 00000001 centerX, centerY, centerZ, 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000
% 00000013 00000000 *VAR[0] *VAR[1] *VAR[2] 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000
% 00000026 : musical notes, luigi whistling in kmr_20
% 00000007 : dust (for walking, see kmr_20) 00000001 *VAR[0] *VAR[1] *VAR[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000

% start of file -->
% SPRITE SHADING
api : 802D9700, 0FE0B0 : SetSpriteShading     : void :  int preset "sets the shading effect on character sprites -- but not items -- in dark areas"
api : 802D9A3C, 0FE3EC : EnableSpriteShading  : void :  bool "0 = no shading | 1 = shading"
% DEMO INPUT
api : 802D9A90, 0FE440 : GetDemoState		: void : {out} var state "0 ordinary gameplay | 1 manually issuing commands in demo | 2 demo map transition?"
api : 802D9ACC, 0FE47C : DemoPressButton	: void : #buttons
api : 802D9AF8, 0FE4A8 : DemoReleaseButton	: void : #buttons
api : 802D9B34, 0FE4E4 : DemoSetButtons		: void : #buttons
api : 802D9B64, 0FE514 : DemoJoystickRadial	: void : int radius "0-255", int angle "degrees cw, 0 is straight up"
api : 802D9C10, 0FE5C0 : DemoJoystickXY		: void : int leftRight "signed byte", int upDown "signed byte"
% <-- end of file

scr : 802D9CB0, 0FE660 : ShakeCam1	: void : Var[0] #camID cam, Var[1] int mode, Var[2] int duration
scr : 802D9CE8, 0FE698 : ShakeCamX	: void : Var[0] #camID cam, Var[1] int mode, Var[2] int duration, Var[3] int magnitude

%} 802DA480

asm : 802DC8F4, 0FF9E4 : spr_appendMDL_component	: void : sprite_component* parent, float dX, float dY, float dZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int opacity
asm : 802DCD00, 0FFDF0 : spr_transform_point		: void : int rotX, int rotY, int rotZ, float inX, float inY, float inZ, float* outX, float* outY, float* outZ
asm : 802DCEDC, 0FFFCC : spr_draw_component 		: void : int flags, sprite_component* comp, short* compOffset, sprite_component** componentList, int* paletteList "list of palette16 pointers", float zscale, matrix4f* mtx

asm : 802DD0DC, 1001CC : _spr_sign_extend_12bit		: int : int value
asm : 802DD0FC, 1001EC : _spr_sign_extend_16bit		: int : int value

asm : 802DD11C, 10020C : update_component			: void : sprite_component* comp, short** cmdList
asm : 802DDC40, 100D30 : render_sprite				: ??? : ???
asm : 802DEB0C, 101BFC : load_sprite				: ??? : ???

asm : 802E11A0, 102A20 : save_game_at_player_position : void : void

asm : 802E8CCC, 10A54C : player_enter_blue_pipe		: void : entity* bluePipeEntity
asm : 802E8E4C, 10A6CC : push_entity_matrix			: void : int entityIndex

dat : 801512cc : current_model_list : model**

dat : 801512e8 : current_model_special_DLs : model**

dat : 80151770 : world_model_list : model*[256`]	% (up to 80151B70)
dat : 80151b70 : battle_model_list : model*[256`]	% (up to 80151F70)

dat : 80151380 : world_entity_list : entity*[30`]	% (up to 801513F8)
dat : 801513F8 : battle_entity_list : entity*[30`]	% (up to 80151470)
dat : 80151470 : current_entity_list : entity**		% one of the above

dat : 80151478 : world_shadow_list : shadow*[60`]	% (up to 80151568)
dat : 80151568 : battle_shadow_list : shadow*[60`]	% (up to 80151658)
dat : 80151658 : current_shadow_list : shadow**		% one of the above

dat : 80151F90 : world_model_special_DLs : displayList*[32`]
dat : 80152010 : battle_model_special_DLs : displayList*[32`]

dat : 80151700 : main_game_state "0 = battle, 1 = pause, 2 = world" : short
dat : 8015170C : current_update_function : code

dat : 802DA490 : world_scripts : script_context*[128`]	% (up to 802DA690)
dat : 802DA690 : battle_scripts : script_context*[128`]	% (up to 802DA890)
dat : 802DA890 : current_script_list : script_context**	% one of the above 

dat : 802DA898 : script_id_list : int[128`]		% (up to 802DAA98)
dat : 802DAA98 : script_index_list : int[128`]	% (up to 802DAC98)
